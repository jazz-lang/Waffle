#[derive(Copy, Debug, PartialEq, Eq, PartialOrd, Ord, Clone)]
pub enum OpV {
    Star(u8),
    Ldar(u8),
    Mov(u8, u8),
    Add(u8, u32),
    Sub(u8, u32),
    Div(u8, u32),
    Mod(u8, u32),
    UShr(u8, u32),
    Shr(u8, u32),
    Shl(u8, u32),
    BitwiseOr(u8, u32),
    BitwiseAnd(u8, u32),
    BitwiseXor(u8, u32),
    LdaUndefined,
    LdaInt(i32),
    LdaTrue,
    LdaFalse,
    /// Load constant.
    LdaK(u32),
    LdaNull,
    LdaGlobal(u32),
    StaGlobal(u32),
    LdaById(u8, u32, u32),
    StaById(u8, u32),
    LdaByVal(u8, u8, u32),
    StaByVal(u8, u8, u32),
    LdaByIdx(u8, i32, u32),
    StaByIdx(u8, i32, u32),
    PushA,
    PopA,
    PushR(u8),
    PopR(u8),
    LdaThis,
    Call(u8, u32, u32),
    Throw,
    CatchSetup(u32),
    LoopHint(u32),
    BrC(u8, u32, u32),
    Br(u32),
    Return,
    CloseEnv(u32),
    NewObject,
    NewArray(u32 /* array length */),
    /// Invoke object constructor with arguments.
    Construct(u32),

    LdaUpvalue(u16),
    StaUpvalue(u16),
    Safepoint,
    Debug,
}

pub const OPCODE_COUNT: usize = 45;

//One opcode should be <= 12 bytes.
const _: [bool; 0] = [false; (!(std::mem::size_of::<OpV>() <= 12)) as usize];

pub enum Op {
    Star = 0,
    Ldar,
    Mov,
    Add,
    Sub,
    Div,
    Mul,
    Mod,
    UShr,
    Shr,
    Shl,
    BitwiseOr,
    BitwiseAnd,
    BitwiseXor,
    LdaUndefined,
    LdaInt,
    LdaTrue,
    LdaFalse,
    LdaK,
    LdaNull,
    LdaGlobal,
    StaGlobal,
    LdaById,
    StaById,
    LdaByVal,
    StaByVal,
    LdaByIdx,
    StaByIdx,
    LdaOwnProperty,
    StaOwnProperty,
    LdaProtoProperty,
    StaProtoProperty,
    LdaChainProperty,
    StaChainProperty,
    LdaOwnId,
    StaOwnId,
    LdaChainId,
    StaChainId,
    LdaProtoId,
    StaProtoId,
    LdaSlowById,
    StaSlowById,
    LdaSlowByIdx,
    StaSlowByIdx,
    PushA,
    PopA,
    PushR,
    PopR,
    LdaThis,
    Call,
    Throw,
    CatchSetup,
    LoopHint,
    BrC,
    Br,
    Greater,
    GreaterEqual,
    Less,
    LessEqual,
    Equal,
    NotEqual,
    Return,
    CloseEnv,
    NewObject,
    NewArray,
    Construct,
    LdaUpvalue,
    StaUpvalue,
    Safepoint,
    Debug,
}
