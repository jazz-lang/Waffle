file /cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.2/src/map.rs does not exist!
file /cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.2/src/raw/mod.rs does not exist!
file /cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.6.2/src/raw/bitmask.rs does not exist!
[0m [0m[1m[38;5;9mpub fn run(mut frame: Frame) -> Result<Value, Value> {
[0m [0m[1m[38;5;12mpush   [0m rbp
[0m [0m[1m[38;5;12mpush   [0m r15
[0m [0m[1m[38;5;12mpush   [0m r14
[0m [0m[1m[38;5;12mpush   [0m r13
[0m [0m[1m[38;5;12mpush   [0m r12
[0m [0m[1m[38;5;12mpush   [0m rbx
[0m [0m[1m[38;5;12msub    [0m rsp, 408
[0m [0m[1m[38;5;12mmov    [0m r12, rsi
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 192], rdi
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsi, +, 40]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 256], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 184], rsi
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_1:
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mmov    [0m edx, 8
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m[0m[1m[38;5;10m.LBB187_2:
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_3:
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 48]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rbp, +, 32], rax
[0m     [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 16]
[0m     [0m[1m[38;5;12mmovdqu [0m xmm1, xmmword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rbp, +, 16], xmm1
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rbp], xmm0
[0m[0m[1m[38;5;10m.LBB187_4:
[0m     [0m[1m[38;5;9munsafe { &mut *self.raw } (src/common/ptr.rs:84)
[0m     [0m[1m[38;5;12mmov    [0m r15, qword, ptr, [r12, +, 16]
[0m[0m[1m[38;5;10m.LBB187_5:
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rax, +, 96]
[0m [0m[1m[38;5;9mlet ins = *bb.code.get_unchecked(frame.ip);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 72]
[0m [0m[1m[38;5;9mlet bb = code.get_unchecked(frame.bp);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [r12, +, 80]
[0m     [0m[1m[38;5;9mintrinsics::offset(self, count) (libcore/ptr/const_ptr.rs:160)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rdx, +, 2*rdx]
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rcx, +, 8*rdx]
[0m [0m[1m[38;5;9mlet ins = *bb.code.get_unchecked(frame.ip);
[0m [0m[1m[38;5;12mlea    [0m rcx, [rax, +, 2*rax]
[0m [0m[1m[38;5;12mmovzx  [0m edx, byte, ptr, [rdi, +, 4*rcx]
[0m [0m[1m[38;5;9mframe.ip += 1;
[0m [0m[1m[38;5;12madd    [0m rax, 1
[0m [0m[1m[38;5;9mlet ins = *bb.code.get_unchecked(frame.ip);
[0m [0m[1m[38;5;12mmovzx  [0m esi, byte, ptr, [rdi, +, 4*rcx, +, 1]
[0m [0m[1m[38;5;12mmovzx  [0m ebp, word, ptr, [rdi, +, 4*rcx, +, 2]
[0m [0m[1m[38;5;12mmovzx  [0m ebx, bp
[0m [0m[1m[38;5;12mmov    [0m r13d, dword, ptr, [rdi, +, 4*rcx, +, 4]
[0m [0m[1m[38;5;12mmov    [0m ecx, dword, ptr, [rdi, +, 4*rcx, +, 8]
[0m [0m[1m[38;5;9mframe.ip += 1;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 72], rax
[0m [0m[1m[38;5;9mlet ins = *bb.code.get_unchecked(frame.ip);
[0m [0m[1m[38;5;12mcmp    [0m rdx, 55
[0m [0m[1m[38;5;9mStar(r) => {
[0m [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_4
[0m [0m[1m[38;5;12mlea    [0m rax, [rip, +, .LJTI187_0]
[0m [0m[1m[38;5;12mmov    [0m rdi, rax
[0m [0m[1m[38;5;12mmovsxd [0m rax, dword, ptr, [rax, +, 4*rdx]
[0m [0m[1m[38;5;12madd    [0m rax, rdi
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m rax
[0m[0m[1m[38;5;10m.LBB187_7:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rdx
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_945
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8*rbx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdi, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r13
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_943
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdi, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rdi, [4*r13]
[0m [0m[1m[38;5;12madd    [0m rdi, r13
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rcx, +, 8*rdi], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_4
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rbx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_508
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_13
[0m     [0m[1m[38;5;12mmov    [0m ebx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbx, rdx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_508
[0m[0m[1m[38;5;10m.LBB187_13:
[0m     [0m[1m[38;5;12mlea    [0m rax, [rcx, +, 8*rdi]
[0m     [0m[1m[38;5;12madd    [0m rax, 8
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rax]
[0m[0m[1m[38;5;10m.LBB187_14:
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m qword, ptr, [rdx, +, 48], rdi
[0m [0m[1m[38;5;9mif object.attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_32
[0m [0m[1m[38;5;9mwhile let Some(object) = obj {
[0m [0m[1m[38;5;12mcmp    [0m qword, ptr, [rdx, +, 16], 1
[0m [0m[1m[38;5;9mobj = object.prototype;
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 24]
[0m [0m[1m[38;5;9mwhile let Some(object) = obj {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_14
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_247
[0m[0m[1m[38;5;10m.LBB187_16:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet value = *frame.r(function);
[0m [0m[1m[38;5;12mmov    [0m r15, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 200], r15
[0m [0m[1m[38;5;9mlet this = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m r13, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mVec { buf: RawVec::NEW, len: 0 } (liballoc/vec.rs:324)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], 8
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 24]
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rax], xmm0
[0m     [0m[1m[38;5;9mfn lt(&self, other: &$t) -> bool { (*self) < (*other) } (libcore/cmp.rs:1136)
[0m     [0m[1m[38;5;12mtest   [0m bp, bp
[0m     [0m[1m[38;5;9mif self.start < self.end { (libcore/iter/range.rs:211)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_20
[0m[0m[1m[38;5;10m.LBB187_17:
[0m     [0m[1m[38;5;9mif self.len == 0 { (liballoc/vec.rs:1225)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 56]
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.len == 0 { (liballoc/vec.rs:1225)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_20
[0m     [0m[1m[38;5;9mself.len -= 1; (liballoc/vec.rs:1229)
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rax, -, 1]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 56], rcx
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 40]
[0m     [0m[1m[38;5;9mSome(ptr::read(self.as_ptr().add(self.len()))) (liballoc/vec.rs:1230)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rcx, +, 8*rax, -, 8]
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m [0m[1m[38;5;9mv.push(val);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m alloc::vec::Vec<T>::push
[0m     [0m[1m[38;5;9mfn lt(&self, other: &$t) -> bool { (*self) < (*other) } (libcore/cmp.rs:1136)
[0m     [0m[1m[38;5;12madd    [0m bp, -1
[0m     [0m[1m[38;5;9mif self.start < self.end { (libcore/iter/range.rs:211)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_17
[0m[0m[1m[38;5;10m.LBB187_20:
[0m [0m[1m[38;5;9mv
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 32]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 224], rax
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 16]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 208], rax
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 216], rax
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m r15, rax
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_923
[0m     [0m[1m[38;5;12mcmp    [0m r15, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_23
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, r15
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_923
[0m[0m[1m[38;5;10m.LBB187_23:
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m qword, ptr, [r15], 3
[0m [0m[1m[38;5;9mif cell.is_function() {
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_930
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [r15, +, 8]
[0m [0m[1m[38;5;9mlet args = local_data().allocate_array(arguments, &mut frame);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;9mlet args = local_data().allocate_array(arguments, &mut frame);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 224]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], rcx
[0m [0m[1m[38;5;12mmovdqa [0m xmm0, xmmword, ptr, [rsp, +, 208]
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mlet args = local_data().allocate_array(arguments, &mut frame);
[0m [0m[1m[38;5;12mmov    [0m rdi, rax
[0m [0m[1m[38;5;12mmov    [0m rdx, r12
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process9LocalData14allocate_array17h40b996dd3de8a21fE@GOTPCREL]
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;9mFunctionCode::Bytecode(_) => {
[0m [0m[1m[38;5;12mcmp    [0m qword, ptr, [rbp, +, 88], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_563
[0m [0m[1m[38;5;9mx if x >= 10_000 => {
[0m [0m[1m[38;5;12mcmp    [0m qword, ptr, [rbp, +, 32], 9999
[0m [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_4
[0m [0m[1m[38;5;9mlocal_data().frames.push(frame);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;9mlocal_data().frames.push(frame);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 112]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 128], rcx
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [r12, +, 96]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 112], xmm0
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [r12, +, 80]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 96], xmm0
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [r12, +, 64]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 80], xmm0
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [r12]
[0m [0m[1m[38;5;12mmovdqu [0m xmm1, xmmword, ptr, [r12, +, 16]
[0m [0m[1m[38;5;12mmovups [0m xmm2, xmmword, ptr, [r12, +, 32]
[0m [0m[1m[38;5;12mmovups [0m xmm3, xmmword, ptr, [r12, +, 48]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 64], xmm3
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 48], xmm2
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 32], xmm1
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mlocal_data().frames.push(frame);
[0m [0m[1m[38;5;12mmov    [0m rdi, rax
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m alloc::vec::Vec<T>::push
[0m [0m[1m[38;5;9mframe = Frame::new(this, func.module);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rbp, +, 120]
[0m [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m [0m[1m[38;5;9mframe = Frame::new(this, func.module);
[0m [0m[1m[38;5;12mmov    [0m rsi, r13
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5frame5Frame3new17hbbd4a28f571e6db5E@GOTPCREL]
[0m [0m[1m[38;5;9mframe = Frame::new(this, func.module);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 128]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 112], rax
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [rsp, +, 112]
[0m [0m[1m[38;5;12mmovups [0m xmmword, ptr, [r12, +, 96], xmm0
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [rsp, +, 96]
[0m [0m[1m[38;5;12mmovups [0m xmmword, ptr, [r12, +, 80], xmm0
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [rsp, +, 80]
[0m [0m[1m[38;5;12mmovups [0m xmmword, ptr, [r12, +, 64], xmm0
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 16]
[0m [0m[1m[38;5;12mmovdqu [0m xmm1, xmmword, ptr, [rsp, +, 32]
[0m [0m[1m[38;5;12mmovups [0m xmm2, xmmword, ptr, [rsp, +, 48]
[0m [0m[1m[38;5;12mmovups [0m xmm3, xmmword, ptr, [rsp, +, 64]
[0m [0m[1m[38;5;12mmovups [0m xmmword, ptr, [r12, +, 48], xmm3
[0m [0m[1m[38;5;12mmovups [0m xmmword, ptr, [r12, +, 32], xmm2
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [r12, +, 16], xmm1
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [r12], xmm0
[0m [0m[1m[38;5;9mframe.func = cell;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 16], r15
[0m [0m[1m[38;5;9mframe.arguments = args;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 32], rbx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_5
[0m[0m[1m[38;5;10m.LBB187_32:
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 32]
[0m     [0m[1m[38;5;12mmov    [0m ecx, 10
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_36
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rdx, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_944
[0m     [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rax, -, 4]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mcmp    [0m eax, dword, ptr, [rdx, +, 16]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_36
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdx]
[0m     [0m[1m[38;5;9munsafe { *self.slots.as_ref().unwrap().get_unchecked(offset as usize) } (src/runtime/cell.rs:89)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rcx, +, 8*rax]
[0m[0m[1m[38;5;10m.LBB187_36:
[0m [0m[1m[38;5;9mframe.rax = object.direct(*offset);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_5
[0m[0m[1m[38;5;10m.LBB187_37:
[0m     [0m[1m[38;5;9mif self.len == 0 { (liballoc/vec.rs:1225)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 56]
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.len == 0 { (liballoc/vec.rs:1225)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_250
[0m     [0m[1m[38;5;9mself.len -= 1; (liballoc/vec.rs:1229)
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rax, -, 1]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 56], rcx
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 40]
[0m     [0m[1m[38;5;9mSome(ptr::read(self.as_ptr().add(self.len()))) (liballoc/vec.rs:1230)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx, +, 8*rax, -, 8]
[0m [0m[1m[38;5;9mframe.rax = val;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_39:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet val = *frame.r(r);
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 256]
[0m     [0m[1m[38;5;9mself.stack.push(val); (src/runtime/frame.rs:127)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m alloc::vec::Vec<T>::push
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_40:
[0m [0m[1m[38;5;9mframe.rax = Value::from(VTag::Undefined);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], 10
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_41:
[0m     [0m[1m[38;5;9mif self.len == 0 { (liballoc/vec.rs:1225)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 56]
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.len == 0 { (liballoc/vec.rs:1225)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_251
[0m     [0m[1m[38;5;9mself.len -= 1; (liballoc/vec.rs:1229)
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rax, -, 1]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 56], rcx
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 40]
[0m     [0m[1m[38;5;9mSome(ptr::read(self.as_ptr().add(self.len()))) (liballoc/vec.rs:1230)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx, +, 8*rax, -, 8]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_252
[0m[0m[1m[38;5;10m.LBB187_43:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rax
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_953
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 8*rbx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(key, &mut slot);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_45:
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m [0m[1m[38;5;12mtest   [0m rax, rax
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_62
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_47:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rdx
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_963
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rdi, [rcx, +, 4*rcx]
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rax, +, 8*rdi], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_4
[0m [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rbx, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rbp
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_52
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_511
[0m     [0m[1m[38;5;12mmov    [0m ebp, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbp, rdx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_511
[0m[0m[1m[38;5;10m.LBB187_52:
[0m     [0m[1m[38;5;12mor     [0m r13, rbx
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(key, &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, r13
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_395
[0m     [0m[1m[38;5;9m*self.value (src/runtime/cell.rs:384)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax]
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_55:
[0m [0m[1m[38;5;9mlet src1 = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet src2 = *frame.r(src2);
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m [0m[1m[38;5;9mif src1.is_int32() && src2.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_206
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m [0m[1m[38;5;9mif src1.is_int32() && src2.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_207
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.as_int32() & src2.as_int32());
[0m [0m[1m[38;5;12mand    [0m ebx, esi
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rbx, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.as_int32() & src2.as_int32());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_58:
[0m [0m[1m[38;5;9mlda_by_idx(&mut frame, base_r, idx_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_idx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_59:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rcx
[0m     [0m[1m[38;5;9munsafe { &mut *self.regs.offset(i as _).raw } (src/runtime/frame.rs:115)
[0m     [0m[1m[38;5;12mmovzx  [0m ecx, bl
[0m [0m[1m[38;5;9mlet val = *frame.r(val);
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, rcx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.insert(Symbol::new_value(val), &mut slot);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6insert17h849017bfd7b28e34E@GOTPCREL]
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:370)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:370)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_62
[0m [0m[1m[38;5;9mslot.store(frame.rax);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9m*self.value = val; (src/runtime/cell.rs:373)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rax], rcx
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_62:
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 32]
[0m [0m[1m[38;5;12mtest   [0m rax, rax
[0m [0m[1m[38;5;12mmov    [0m ecx, 10
[0m [0m[1m[38;5;12mcmovne [0m rcx, rax
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_63:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rax
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m r13, rax
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.insert(key, &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, r13
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6insert17h849017bfd7b28e34E@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_64:
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m [0m[1m[38;5;12mtest   [0m rax, rax
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_4
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rax], rcx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_66:
[0m [0m[1m[38;5;9mlet val = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet shift = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m [0m[1m[38;5;9mif val.is_int32() && shift.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_209
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m [0m[1m[38;5;9mif val.is_int32() && shift.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_210
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val.as_int32() >> (shift.as_int32() & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m ecx, esi
[0m [0m[1m[38;5;12msar    [0m ebx, cl
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rbx, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val.as_int32() >> (shift.as_int32() & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_69:
[0m     [0m[1m[38;5;9munsafe { &mut *self.regs.offset(i as _).raw } (src/runtime/frame.rs:115)
[0m     [0m[1m[38;5;12mmovzx  [0m eax, bl
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet value = *frame.r(r1);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx, +, rax]
[0m [0m[1m[38;5;9m*frame.r(r0) = value;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, rsi], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_70:
[0m     [0m[1m[38;5;9mif self.len == self.buf.capacity() { (liballoc/vec.rs:1200)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [r12, +, 104]
[0m     [0m[1m[38;5;12mcmp    [0m rbp, qword, ptr, [r12, +, 96]
[0m     [0m[1m[38;5;9mif self.len == self.buf.capacity() { (liballoc/vec.rs:1200)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_212
[0m     [0m[1m[38;5;9mlet (a, b) = intrinsics::add_with_overflow(self as $ActualT, rhs as $ActualT); (libcore/num/mod.rs:3632)
[0m     [0m[1m[38;5;12mmov    [0m rax, rbp
[0m     [0m[1m[38;5;12minc    [0m rax
[0m     [0m[1m[38;5;9mSome(v) => Ok(v), (libcore/option.rs:540)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_970
[0m     [0m[1m[38;5;9mlet double_cap = self.cap * 2; (liballoc/raw_vec.rs:511)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rbp
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mOrdering::Less | Ordering::Equal => v2, (libcore/cmp.rs:1016)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;12mcmova  [0m rax, rcx
[0m     [0m[1m[38;5;12mmov    [0m ecx, 4
[0m     [0m[1m[38;5;9mlet (a, b) = intrinsics::mul_with_overflow(self as $ActualT, rhs as $ActualT); (libcore/num/mod.rs:3688)
[0m     [0m[1m[38;5;12mmul    [0m rcx
[0m     [0m[1m[38;5;9mOk(t) => Ok(t), (libcore/result.rs:611)
[0m     [0m[1m[38;5;12mjo     [0m[1m[38;5;10m .LBB187_970
[0m     [0m[1m[38;5;12mmov    [0m r14, rax
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mtest   [0m rbp, rbp
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_260
[0m     [0m[1m[38;5;9mlet memory = if let Some((ptr, old_layout)) = self.current_memory() { (liballoc/raw_vec.rs:524)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 88]
[0m     [0m[1m[38;5;9mlet memory = if let Some((ptr, old_layout)) = self.current_memory() { (liballoc/raw_vec.rs:524)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_260
[0m     [0m[1m[38;5;12mlea    [0m rsi, [4*rbp]
[0m     [0m[1m[38;5;9mif size == new_size { (liballoc/alloc.rs:205)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r14
[0m     [0m[1m[38;5;9mif size == new_size { (liballoc/alloc.rs:205)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_76
[0m     [0m[1m[38;5;9mOk(t) => Ok(t), (libcore/result.rs:611)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_555
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_957
[0m[0m[1m[38;5;10m.LBB187_78:
[0m [0m[1m[38;5;9mlet val = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m r14, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet shift = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m r14, rcx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rcx
[0m [0m[1m[38;5;9mif val.is_int32() && shift.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_213
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rcx
[0m [0m[1m[38;5;9mif val.is_int32() && shift.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_272
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val.as_int32() << (shift.as_int32() & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m ecx, ebx
[0m [0m[1m[38;5;12mshl    [0m r14d, cl
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m r14, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val.as_int32() << (shift.as_int32() & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], r14
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_81:
[0m [0m[1m[38;5;9mlda_by_id(&mut frame, base_r, key_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_82:
[0m [0m[1m[38;5;9mlet lhs = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet rhs = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mlea    [0m r14, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r14
[0m [0m[1m[38;5;9mif lhs.is_int32() && rhs.is_int32() && rhs.as_int32() != 0 {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_215
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m [0m[1m[38;5;9mif lhs.is_int32() && rhs.is_int32() && rhs.as_int32() != 0 {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_257
[0m [0m[1m[38;5;9mif lhs.is_int32() && rhs.is_int32() && rhs.as_int32() != 0 {
[0m [0m[1m[38;5;12mtest   [0m ebp, ebp
[0m [0m[1m[38;5;9mif lhs.is_int32() && rhs.is_int32() && rhs.as_int32() != 0 {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_257
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(lhs.as_int32() % rhs.as_int32());
[0m [0m[1m[38;5;12mcmp    [0m ebx, -2147483648
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_87
[0m [0m[1m[38;5;12mcmp    [0m ebp, -1
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_991
[0m[0m[1m[38;5;10m.LBB187_87:
[0m [0m[1m[38;5;12mmov    [0m eax, ebx
[0m [0m[1m[38;5;12mcdq[0m
[0m [0m[1m[38;5;12midiv   [0m ebp
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rdx, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(lhs.as_int32() % rhs.as_int32());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m [0m[1m[38;5;12mxor    [0m edx, edx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m esi, esi
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_88:
[0m [0m[1m[38;5;9mlet arguments = frame.arguments;
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 32]
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rax, rcx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_972
[0m     [0m[1m[38;5;12mcmp    [0m rax, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_91
[0m     [0m[1m[38;5;12mmov    [0m ecx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rcx, rax
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_972
[0m[0m[1m[38;5;10m.LBB187_91:
[0m [0m[1m[38;5;9mif let CellValue::Array(ref array) = arguments.as_cell().value {
[0m [0m[1m[38;5;12mcmp    [0m qword, ptr, [rax], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_973
[0m [0m[1m[38;5;9mframe.rax = array
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rax, +, 8]
[0m [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9mif self < slice.len() { unsafe { Some(self.get_unchecked(slice)) } } else { None } (libcore/slice/mod.rs:2850)
[0m     [0m[1m[38;5;12mcmp    [0m qword, ptr, [rcx, +, 16], rbx
[0m     [0m[1m[38;5;9mSome(x) => Some(f(x)), (libcore/option.rs:458)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_94
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx]
[0m     [0m[1m[38;5;9mSome(x) => Some(f(x)), (libcore/option.rs:458)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8*rbx]
[0m[0m[1m[38;5;10m.LBB187_94:
[0m [0m[1m[38;5;9mframe.rax = array
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_95:
[0m [0m[1m[38;5;9mlet src1 = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet src2 = *frame.r(src2);
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m [0m[1m[38;5;9mif src1.is_int32() && src2.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_217
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m [0m[1m[38;5;9mif src1.is_int32() && src2.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_218
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.as_int32() ^ src2.as_int32());
[0m [0m[1m[38;5;12mxor    [0m ebx, ebp
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rbx, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.as_int32() ^ src2.as_int32());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_98:
[0m [0m[1m[38;5;9mframe.rax = frame.arguments;
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 32]
[0m [0m[1m[38;5;9mframe.rax = frame.arguments;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_99:
[0m [0m[1m[38;5;9mlet lhs = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet rhs = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mlea    [0m rax, [rcx, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rdi, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_220
[0m     [0m[1m[38;5;9mreturn self.as_int32() as _; (src/runtime/value.rs:344)
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, edi
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_289
[0m[0m[1m[38;5;10m.LBB187_433:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, rdx
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -1125899906842624
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rsi
[0m     [0m[1m[38;5;9mif self.is_double() { (src/runtime/value.rs:346)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_435
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rcx
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_439
[0m[0m[1m[38;5;10m.LBB187_101:
[0m [0m[1m[38;5;9mlet acc = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_252
[0m[0m[1m[38;5;10m.LBB187_102:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet value = *frame.r(r);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;9mframe.rax = value;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_103:
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m r13, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(x);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], r13
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_104:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rdx
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_997
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rdi, [rcx, +, 4*rcx]
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rax, +, 8*rdi], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_4
[0m [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rbx, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rbp
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_109
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_513
[0m     [0m[1m[38;5;12mmov    [0m ebp, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbp, rdx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_513
[0m[0m[1m[38;5;10m.LBB187_109:
[0m     [0m[1m[38;5;12mor     [0m r13, rbx
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(key, &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, r13
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_396
[0m     [0m[1m[38;5;9m*self.value (src/runtime/cell.rs:384)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax]
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_112:
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_974
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rax, +, 8*rbx]
[0m [0m[1m[38;5;9mlocal_data()
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;12mmov    [0m r14, rax
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 232], rbx
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 144]
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r14, +, 152]
[0m     [0m[1m[38;5;9mself.state.v0 = self.k0 ^ 0x736f6d6570736575; (libcore/hash/sip.rs:215)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mpshufd [0m xmm0, xmm0, 68
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmmword, ptr, [rip, +, .LCPI187_1]
[0m     [0m[1m[38;5;9mself.state.v1 = self.k1 ^ 0x646f72616e646f6d; (libcore/hash/sip.rs:216)
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rcx
[0m     [0m[1m[38;5;12mpshufd [0m xmm1, xmm1, 68
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmmword, ptr, [rip, +, .LCPI187_2]
[0m [0m[1m[38;5;9m.insert(Symbol::new_value(key), frame.rax);
[0m [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mDefaultHasher(SipHasher13::new_with_keys(self.k0, self.k1)) (libstd/collections/hash/map.rs:2504)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], rcx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rsp, +, 40], xmm0
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rsp, +, 56], xmm1
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 24]
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rax, +, 48], xmm0
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m <jlight::runtime::symbol::Symbol as core::hash::Hash>::hash
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 368], rbx
[0m     [0m[1m[38;5;9mlet b: u64 = ((self.length as u64 & 0xff) << 56) | self.tail; (libcore/hash/sip.rs:308)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9mlet mut state = self.state; (libcore/hash/sip.rs:306)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rsp, +, 56]
[0m     [0m[1m[38;5;9mlet b: u64 = ((self.length as u64 & 0xff) << 56) | self.tail; (libcore/hash/sip.rs:308)
[0m     [0m[1m[38;5;12mshl    [0m rsi, 56
[0m     [0m[1m[38;5;12mor     [0m rsi, qword, ptr, [rsp, +, 72]
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 64]
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 40]
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9mstate.v3 ^= b; (libcore/hash/sip.rs:310)
[0m     [0m[1m[38;5;12mxor    [0m rax, rsi
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rcx, 32
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 48]
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9mstate.v0 ^= b; (libcore/hash/sip.rs:312)
[0m     [0m[1m[38;5;12mxor    [0m rcx, rsi
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rcx, 32
[0m     [0m[1m[38;5;9mstate.v2 ^= 0xff; (libcore/hash/sip.rs:314)
[0m     [0m[1m[38;5;12mxor    [0m rdx, 255
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rcx, 32
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m [0m[1m[38;5;12mlea    [0m rcx, [r14, +, 144]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 344], rcx
[0m     [0m[1m[38;5;9mstate.v0 ^ state.v1 ^ state.v2 ^ state.v3 (libcore/hash/sip.rs:317)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mstate.v0 ^ state.v1 ^ state.v2 ^ state.v3 (libcore/hash/sip.rs:317)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rax
[0m     [0m[1m[38;5;12mmov    [0m rax, r14
[0m     [0m[1m[38;5;12madd    [0m rax, 160
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 336], rax
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r14, +, 160]
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [r14, +, 168]
[0m     [0m[1m[38;5;12mmov    [0m rax, rbp
[0m     [0m[1m[38;5;12mshr    [0m rax, 57
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 352], rax
[0m     [0m[1m[38;5;12mmovd   [0m xmm0, eax
[0m     [0m[1m[38;5;12mpunpcklbw[0m xmm0, xmm0
[0m     [0m[1m[38;5;12mpshuflw[0m xmm0, xmm0, 224
[0m     [0m[1m[38;5;12mpshufd [0m xmm0, xmm0, 0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 360], r14
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [r14, +, 176]
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 288], rdx
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 384], xmm0
[0m[0m[1m[38;5;10m.LBB187_116:
[0m     [0m[1m[38;5;12mmov    [0m r12, rdi
[0m     [0m[1m[38;5;12mand    [0m r12, rcx
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rax, +, r12]
[0m     [0m[1m[38;5;12madd    [0m rdi, 16
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 320], rdi
[0m     [0m[1m[38;5;12madd    [0m rax, 16
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 176], rax
[0m     [0m[1m[38;5;9mcopy_nonoverlapping(src, dst, count) (libcore/intrinsics.rs:1986)
[0m     [0m[1m[38;5;12mmovdqu [0m xmm1, xmmword, ptr, [rdx, +, r12]
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 304], xmm1
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpcmpeqb[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mpmovmskb[0m r15d, xmm0
[0m[0m[1m[38;5;10m.LBB187_117:
[0m     [0m[1m[38;5;12mtest   [0m r15w, r15w
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_120
[0m     [0m[1m[38;5;12mbsf    [0m ax, r15w
[0m     [0m[1m[38;5;12mmovzx  [0m ebx, ax
[0m     [0m[1m[38;5;12madd    [0m rbx, r12
[0m     [0m[1m[38;5;12mmov    [0m r13, rcx
[0m     [0m[1m[38;5;12mand    [0m rbx, rcx
[0m     [0m[1m[38;5;12mshl    [0m rbx, 4
[0m     [0m[1m[38;5;12mmov    [0m r14, rsi
[0m     [0m[1m[38;5;12madd    [0m rsi, rbx
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 232]
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN72_$LT$jlight..runtime..symbol..Symbol$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc8747ce9d1deae42E@GOTPCREL]
[0m     [0m[1m[38;5;12mlea    [0m ecx, [r15, -, 1]
[0m     [0m[1m[38;5;12mand    [0m ecx, r15d
[0m     [0m[1m[38;5;12mmov    [0m r15d, ecx
[0m     [0m[1m[38;5;12mtest   [0m al, al
[0m     [0m[1m[38;5;12mmov    [0m rcx, r13
[0m     [0m[1m[38;5;12mmov    [0m rsi, r14
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_203
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_117
[0m[0m[1m[38;5;10m.LBB187_120:
[0m     [0m[1m[38;5;9mtransmute::<i8x16, _>(simd_eq(a.as_i8x16(), b.as_i8x16())) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:820)
[0m     [0m[1m[38;5;12mpcmpeqd[0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmm1, xmmword, ptr, [rsp, +, 304]
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpcmpeqb[0m xmm1, xmm0
[0m     [0m[1m[38;5;12mpmovmskb[0m eax, xmm1
[0m     [0m[1m[38;5;12mtest   [0m ax, ax
[0m     [0m[1m[38;5;12mmov    [0m r12, qword, ptr, [rsp, +, 184]
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 288]
[0m     [0m[1m[38;5;12mmovdqa [0m xmm0, xmmword, ptr, [rsp, +, 384]
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 176]
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 320]
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_116
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 344]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rax
[0m     [0m[1m[38;5;12mmov    [0m r14, qword, ptr, [rsp, +, 360]
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r14, +, 160]
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r14, +, 168]
[0m     [0m[1m[38;5;12mxor    [0m esi, esi
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbp
[0m     [0m[1m[38;5;12mmov    [0m r15, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_122:
[0m     [0m[1m[38;5;12mmov    [0m rdx, rdi
[0m     [0m[1m[38;5;12mand    [0m rdx, rcx
[0m     [0m[1m[38;5;9mcopy_nonoverlapping(src, dst, count) (libcore/intrinsics.rs:1986)
[0m     [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rax, +, rdx]
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpmovmskb[0m ebx, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsi, +, rdx]
[0m     [0m[1m[38;5;12madd    [0m rdi, 16
[0m     [0m[1m[38;5;12madd    [0m rsi, 16
[0m     [0m[1m[38;5;12mtest   [0m bx, bx
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_122
[0m     [0m[1m[38;5;12mbsf    [0m si, bx
[0m     [0m[1m[38;5;12mmovzx  [0m esi, si
[0m     [0m[1m[38;5;12madd    [0m rdx, rsi
[0m     [0m[1m[38;5;12mand    [0m rdx, rcx
[0m     [0m[1m[38;5;12mmov    [0m bl, byte, ptr, [rax, +, rdx]
[0m     [0m[1m[38;5;12mtest   [0m bl, bl
[0m     [0m[1m[38;5;12mjns    [0m[1m[38;5;10m .LBB187_915
[0m     [0m[1m[38;5;12mand    [0m bl, 1
[0m     [0m[1m[38;5;12mmov    [0m r13, qword, ptr, [rsp, +, 368]
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_130
[0m[0m[1m[38;5;10m.LBB187_125:
[0m     [0m[1m[38;5;12mcmp    [0m qword, ptr, [r14, +, 184], 0
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_130
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 144]
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 336]
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m hashbrown::raw::RawTable<T>::reserve_rehash
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r14, +, 160]
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r14, +, 168]
[0m     [0m[1m[38;5;12mxor    [0m esi, esi
[0m[0m[1m[38;5;10m.LBB187_128:
[0m     [0m[1m[38;5;12mmov    [0m rdx, rbp
[0m     [0m[1m[38;5;12mand    [0m rdx, rcx
[0m     [0m[1m[38;5;9mcopy_nonoverlapping(src, dst, count) (libcore/intrinsics.rs:1986)
[0m     [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rax, +, rdx]
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpmovmskb[0m edi, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rsi, +, rdx]
[0m     [0m[1m[38;5;12madd    [0m rbp, 16
[0m     [0m[1m[38;5;12madd    [0m rsi, 16
[0m     [0m[1m[38;5;12mtest   [0m di, di
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_128
[0m     [0m[1m[38;5;12mbsf    [0m si, di
[0m     [0m[1m[38;5;12mmovzx  [0m esi, si
[0m     [0m[1m[38;5;12madd    [0m rdx, rsi
[0m     [0m[1m[38;5;12mand    [0m rdx, rcx
[0m     [0m[1m[38;5;12mcmp    [0m byte, ptr, [rax, +, rdx], 0
[0m     [0m[1m[38;5;12mjns    [0m[1m[38;5;10m .LBB187_916
[0m[0m[1m[38;5;10m.LBB187_130:
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [r14, +, 176]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rdx
[0m     [0m[1m[38;5;12mshl    [0m rdi, 4
[0m     [0m[1m[38;5;12mmovzx  [0m ebp, bl
[0m     [0m[1m[38;5;12msub    [0m qword, ptr, [r14, +, 184], rbp
[0m     [0m[1m[38;5;9mintrinsics::wrapping_sub(self, rhs) (libcore/num/mod.rs:3343)
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rdx, -, 16]
[0m     [0m[1m[38;5;12mand    [0m rbp, rcx
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 352]
[0m     [0m[1m[38;5;12mmov    [0m byte, ptr, [rax, +, rdx], cl
[0m     [0m[1m[38;5;12mmov    [0m byte, ptr, [rbp, +, rax, +, 16], cl
[0m     [0m[1m[38;5;9mintrinsics::move_val_init(&mut *dst, src) (libcore/ptr/mod.rs:817)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsi, +, rdi], r13
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsi, +, rdi, +, 8], r15
[0m     [0m[1m[38;5;12madd    [0m qword, ptr, [r14, +, 192], 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_131:
[0m [0m[1m[38;5;9mlet lhs = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m r14, qword, ptr, [r12]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 376], r14
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet rhs = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 200], rbx
[0m [0m[1m[38;5;12mmovabs [0m rbp, -562949953421312
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mlea    [0m rax, [rbp, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m r14, rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rax
[0m [0m[1m[38;5;9mif lhs.is_int32()
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_222
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m [0m[1m[38;5;9mif lhs.is_int32()
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_290
[0m [0m[1m[38;5;12mmov    [0m eax, 2147483647
[0m [0m[1m[38;5;9m&& !(lhs.as_int32() > std::i32::MAX - rhs.as_int32())
[0m [0m[1m[38;5;12msub    [0m eax, ebx
[0m [0m[1m[38;5;9m&& !(lhs.as_int32() > std::i32::MAX - rhs.as_int32())
[0m [0m[1m[38;5;12mcmp    [0m eax, r14d
[0m [0m[1m[38;5;9mif lhs.is_int32()
[0m [0m[1m[38;5;12mjl     [0m[1m[38;5;10m .LBB187_291
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(lhs.as_int32() + rhs.as_int32());
[0m [0m[1m[38;5;12madd    [0m ebx, r14d
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mor     [0m rbx, rbp
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(lhs.as_int32() + rhs.as_int32());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbx
[0m [0m[1m[38;5;12mxor    [0m edx, edx
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mxor    [0m esi, esi
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_135:
[0m [0m[1m[38;5;9mlet src1 = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet src2 = *frame.r(src2);
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m [0m[1m[38;5;9mif src1.is_int32() && src2.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_226
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m [0m[1m[38;5;9mif src1.is_int32() && src2.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_227
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.as_int32() | src2.as_int32());
[0m [0m[1m[38;5;12mor     [0m ebx, ebp
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rbx, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.as_int32() | src2.as_int32());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_138:
[0m [0m[1m[38;5;9mlet lhs = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet rhs = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m r8, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r8
[0m [0m[1m[38;5;9m_ if lhs.is_int32() && rhs.is_int32() => {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_229
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m [0m[1m[38;5;9m_ if lhs.is_int32() && rhs.is_int32() => {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_315
[0m     [0m[1m[38;5;9mlet (a, b) = intrinsics::sub_with_overflow(self as $ActualT, rhs as $ActualT); (libcore/num/mod.rs:1634)
[0m     [0m[1m[38;5;12msub    [0m ebx, ecx
[0m [0m[1m[38;5;9m(x, false) => {
[0m [0m[1m[38;5;12mjo     [0m[1m[38;5;10m .LBB187_142
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmov    [0m eax, ebx
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(x);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m[0m[1m[38;5;10m.LBB187_142:
[0m [0m[1m[38;5;12mxor    [0m edi, edi
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_143:
[0m [0m[1m[38;5;9msta_by_id(&mut frame, base_r, key_r, fdbk)
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::sta_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_144:
[0m [0m[1m[38;5;9mframe.rax = Value::from(VTag::Null);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], 2
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_145:
[0m [0m[1m[38;5;9mlet val = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet shift = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m [0m[1m[38;5;9mif val.is_int32() && shift.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_235
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m [0m[1m[38;5;9mif val.is_int32() && shift.is_int32() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_236
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val.as_int32() >> (shift.as_int32() & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m ecx, esi
[0m [0m[1m[38;5;12msar    [0m ebx, cl
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rbx, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val.as_int32() >> (shift.as_int32() & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_148:
[0m [0m[1m[38;5;9mlet lhs = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet rhs = *frame.r(rhs);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rax, +, rsi]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m r8, [rax, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r8
[0m [0m[1m[38;5;9m_ if lhs.is_int32() && rhs.is_int32() => {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_238
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m [0m[1m[38;5;9m_ if lhs.is_int32() && rhs.is_int32() => {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_324
[0m     [0m[1m[38;5;9mlet (a, b) = intrinsics::mul_with_overflow(self as $ActualT, rhs as $ActualT); (libcore/num/mod.rs:1660)
[0m     [0m[1m[38;5;12mimul   [0m ecx, ebx
[0m [0m[1m[38;5;9m(x, false) => {
[0m [0m[1m[38;5;12mjo     [0m[1m[38;5;10m .LBB187_152
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmov    [0m eax, ecx
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(x);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m[0m[1m[38;5;10m.LBB187_152:
[0m [0m[1m[38;5;12mxor    [0m edi, edi
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_153:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rcx
[0m     [0m[1m[38;5;9munsafe { &mut *self.regs.offset(i as _).raw } (src/runtime/frame.rs:115)
[0m     [0m[1m[38;5;12mmovzx  [0m ecx, bl
[0m [0m[1m[38;5;9mlet val = *frame.r(val);
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, rcx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(Symbol::new_value(val), &mut slot);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_45
[0m[0m[1m[38;5;10m.LBB187_154:
[0m [0m[1m[38;5;9mlet val = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [r12]
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 256]
[0m     [0m[1m[38;5;9mself.stack.push(val); (src/runtime/frame.rs:127)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m alloc::vec::Vec<T>::push
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_155:
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_975
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rax, r13
[0m     [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_1011
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rcx, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rcx, [4*r13]
[0m [0m[1m[38;5;12madd    [0m rcx, r13
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rax, +, 8*rcx], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1012
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rdx, +, rsi]
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rbx, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_954
[0m [0m[1m[38;5;12mmov    [0m r8, qword, ptr, [r12]
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_161
[0m     [0m[1m[38;5;12mmov    [0m ebx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbx, rdi
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_954
[0m[0m[1m[38;5;10m.LBB187_161:
[0m     [0m[1m[38;5;12mlea    [0m rbx, [rax, +, 8*rcx]
[0m     [0m[1m[38;5;12madd    [0m rbx, 8
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdi, +, 48]
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, qword, ptr, [rbx]
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_253
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12madd    [0m rax, 2
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9msta_by_id(&mut frame, base_r, key_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::sta_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_163:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rdx
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_955
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8*rbx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdi, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r13
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_956
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdi, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rdi, [4*r13]
[0m [0m[1m[38;5;12madd    [0m rdi, r13
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rcx, +, 8*rdi], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_4
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rbx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_169
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_515
[0m     [0m[1m[38;5;12mmov    [0m ebx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbx, rdx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_515
[0m[0m[1m[38;5;10m.LBB187_169:
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(Symbol::new_value(key), &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, rax
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_397
[0m     [0m[1m[38;5;9m*self.value (src/runtime/cell.rs:384)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_172:
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_1005
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rax, +, 8*rbx]
[0m [0m[1m[38;5;9mlet global = local_data().globals.get(&Symbol::new_value(key));
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;9mlet global = local_data().globals.get(&Symbol::new_value(key));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rbp
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 144]
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbx, +, 152]
[0m     [0m[1m[38;5;9mself.state.v0 = self.k0 ^ 0x736f6d6570736575; (libcore/hash/sip.rs:215)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mpshufd [0m xmm0, xmm0, 68
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmmword, ptr, [rip, +, .LCPI187_1]
[0m     [0m[1m[38;5;9mself.state.v1 = self.k1 ^ 0x646f72616e646f6d; (libcore/hash/sip.rs:216)
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rcx
[0m     [0m[1m[38;5;12mpshufd [0m xmm1, xmm1, 68
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmmword, ptr, [rip, +, .LCPI187_2]
[0m     [0m[1m[38;5;9mDefaultHasher(SipHasher13::new_with_keys(self.k0, self.k1)) (libstd/collections/hash/map.rs:2504)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], rcx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rsp, +, 40], xmm0
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rsp, +, 56], xmm1
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 24]
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rax, +, 48], xmm0
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbp
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m <jlight::runtime::symbol::Symbol as core::hash::Hash>::hash
[0m     [0m[1m[38;5;9mlet b: u64 = ((self.length as u64 & 0xff) << 56) | self.tail; (libcore/hash/sip.rs:308)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9mlet mut state = self.state; (libcore/hash/sip.rs:306)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rsp, +, 56]
[0m     [0m[1m[38;5;9mlet b: u64 = ((self.length as u64 & 0xff) << 56) | self.tail; (libcore/hash/sip.rs:308)
[0m     [0m[1m[38;5;12mshl    [0m rsi, 56
[0m     [0m[1m[38;5;12mor     [0m rsi, qword, ptr, [rsp, +, 72]
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 64]
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 40]
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9mstate.v3 ^= b; (libcore/hash/sip.rs:310)
[0m     [0m[1m[38;5;12mxor    [0m rax, rsi
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 48]
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rcx, 32
[0m     [0m[1m[38;5;9mstate.v0 ^= b; (libcore/hash/sip.rs:312)
[0m     [0m[1m[38;5;12mxor    [0m rdx, rsi
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9mstate.v2 ^= 0xff; (libcore/hash/sip.rs:314)
[0m     [0m[1m[38;5;12mxor    [0m rcx, 255
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rcx, 32
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rcx, 32
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rdx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rdx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 13
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 16
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rax, rcx
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rax, 21
[0m     [0m[1m[38;5;9mintrinsics::wrapping_add(self, rhs) (libcore/num/mod.rs:3320)
[0m     [0m[1m[38;5;12madd    [0m rcx, rbp
[0m     [0m[1m[38;5;9mintrinsics::rotate_left(self, n as $SelfT) (libcore/num/mod.rs:2704)
[0m     [0m[1m[38;5;12mrol    [0m rbp, 17
[0m     [0m[1m[38;5;12mmov    [0m rdx, rcx
[0m     [0m[1m[38;5;12mrol    [0m rdx, 32
[0m     [0m[1m[38;5;9mstate.v0 ^ state.v1 ^ state.v2 ^ state.v3 (libcore/hash/sip.rs:317)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rcx
[0m     [0m[1m[38;5;9m($state:expr) => {{ compress!($state.v0, $state.v1, $state.v2, $state.v3) }}; (libcore/hash/sip.rs:85)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rdx
[0m     [0m[1m[38;5;9mstate.v0 ^ state.v1 ^ state.v2 ^ state.v3 (libcore/hash/sip.rs:317)
[0m     [0m[1m[38;5;12mxor    [0m rbp, rax
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbx, +, 160]
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rbx, +, 168]
[0m     [0m[1m[38;5;12mmov    [0m rax, rbp
[0m     [0m[1m[38;5;12mshr    [0m rax, 57
[0m     [0m[1m[38;5;12mmovd   [0m xmm0, eax
[0m     [0m[1m[38;5;12mpunpcklbw[0m xmm0, xmm0
[0m     [0m[1m[38;5;12mpshuflw[0m xmm0, xmm0, 224
[0m     [0m[1m[38;5;12mpshufd [0m xmm0, xmm0, 0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rbx, +, 176]
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 304], rdx
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 288], xmm0
[0m[0m[1m[38;5;10m.LBB187_176:
[0m     [0m[1m[38;5;12mmov    [0m r13, rbp
[0m     [0m[1m[38;5;12mand    [0m r13, rcx
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rax, +, r13]
[0m     [0m[1m[38;5;12madd    [0m rbp, 16
[0m     [0m[1m[38;5;12madd    [0m rax, 16
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 176], rax
[0m     [0m[1m[38;5;9mcopy_nonoverlapping(src, dst, count) (libcore/intrinsics.rs:1986)
[0m     [0m[1m[38;5;12mmovdqu [0m xmm1, xmmword, ptr, [rdx, +, r13]
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 320], xmm1
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpcmpeqb[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mpmovmskb[0m r14d, xmm0
[0m[0m[1m[38;5;10m.LBB187_177:
[0m     [0m[1m[38;5;12mtest   [0m r14w, r14w
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_180
[0m     [0m[1m[38;5;12mbsf    [0m ax, r14w
[0m     [0m[1m[38;5;12mmovzx  [0m r12d, ax
[0m     [0m[1m[38;5;12madd    [0m r12, r13
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rcx
[0m     [0m[1m[38;5;12mand    [0m r12, rcx
[0m     [0m[1m[38;5;12mshl    [0m r12, 4
[0m     [0m[1m[38;5;12mmov    [0m r15, rsi
[0m     [0m[1m[38;5;12mlea    [0m rbx, [rsi, +, r12]
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mmov    [0m rsi, rbx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN72_$LT$jlight..runtime..symbol..Symbol$u20$as$u20$core..cmp..PartialEq$GT$2eq17hc8747ce9d1deae42E@GOTPCREL]
[0m     [0m[1m[38;5;12mlea    [0m ecx, [r14, -, 1]
[0m     [0m[1m[38;5;12mand    [0m ecx, r14d
[0m     [0m[1m[38;5;12mmov    [0m r14d, ecx
[0m     [0m[1m[38;5;12mtest   [0m al, al
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;12mmov    [0m rsi, r15
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_204
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_177
[0m[0m[1m[38;5;10m.LBB187_180:
[0m     [0m[1m[38;5;9mtransmute::<i8x16, _>(simd_eq(a.as_i8x16(), b.as_i8x16())) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:820)
[0m     [0m[1m[38;5;12mpcmpeqd[0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmm1, xmmword, ptr, [rsp, +, 320]
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpcmpeqb[0m xmm1, xmm0
[0m     [0m[1m[38;5;12mpmovmskb[0m eax, xmm1
[0m     [0m[1m[38;5;12mtest   [0m ax, ax
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 304]
[0m     [0m[1m[38;5;12mmovdqa [0m xmm0, xmmword, ptr, [rsp, +, 288]
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 176]
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_248
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_176
[0m[0m[1m[38;5;10m.LBB187_181:
[0m [0m[1m[38;5;9mStaByIdx(base_r, key_r, fdbk) => sta_by_idx(&mut frame, base_r, key_r, fdbk),
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::sta_by_idx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_182:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rdx
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_1013
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rdi, [rcx, +, 4*rcx]
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rax, +, 8*rdi], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_4
[0m [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rbx, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rbp
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_187
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_518
[0m     [0m[1m[38;5;12mmov    [0m ebp, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbp, rdx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_518
[0m[0m[1m[38;5;10m.LBB187_187:
[0m     [0m[1m[38;5;12mor     [0m r13, rbx
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.insert(key, &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, r13
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6insert17h849017bfd7b28e34E@GOTPCREL]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_64
[0m[0m[1m[38;5;10m.LBB187_188:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rax
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_1014
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 8*rbx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.insert(key, &mut slot);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6insert17h849017bfd7b28e34E@GOTPCREL]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_64
[0m[0m[1m[38;5;10m.LBB187_190:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rdx
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:316)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts(self.as_ptr(), self.len) } (liballoc/vec.rs:1966)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 56]
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rbx
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_998
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdi, +, 40]
[0m     [0m[1m[38;5;9mself.func.func_value_unchecked().constants[ix as usize] (src/runtime/frame.rs:119)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8*rbx]
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdi, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r13
[0m     [0m[1m[38;5;12mmovabs [0m rbx, -562949953421312
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_1001
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdi, +, 8]
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rdi, [4*r13]
[0m [0m[1m[38;5;12madd    [0m rdi, r13
[0m [0m[1m[38;5;12mcmp    [0m word, ptr, [rcx, +, 8*rdi], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1006
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12madd    [0m rbx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rbx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_196
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_462
[0m     [0m[1m[38;5;12mmov    [0m ebx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rbx, rdx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_462
[0m[0m[1m[38;5;10m.LBB187_196:
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(Symbol::new_value(key), &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, rax
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_258
[0m     [0m[1m[38;5;9m*self.value (src/runtime/cell.rs:384)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_199:
[0m     [0m[1m[38;5;9mif self.is_null_or_undefined() { (src/runtime/value.rs:326)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !Self::UNDEFINED_TAG as i64) == Self::VALUE_NULL as _ } (src/runtime/value.rs:168)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rax
[0m     [0m[1m[38;5;12mand    [0m rcx, -9
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.is_null_or_undefined() { (src/runtime/value.rs:326)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_244
[0m[0m[1m[38;5;10m.LBB187_200:
[0m [0m[1m[38;5;9mframe.bp = if_false as _;
[0m [0m[1m[38;5;12mmovzx  [0m eax, r13w
[0m [0m[1m[38;5;9mframe.bp = if_false as _;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 80], rax
[0m [0m[1m[38;5;9mframe.ip = 0;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 72], 0
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_201:
[0m [0m[1m[38;5;9mlet this = frame.this;
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 24]
[0m [0m[1m[38;5;9mframe.rax = this;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_202:
[0m     [0m[1m[38;5;9mraw: (self.raw as isize + x) as *mut T, (src/common/ptr.rs:35)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;9mlet mut base = *frame.r(base_r);
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, rsi]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rax
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m r13, rax
[0m     [0m[1m[38;5;9mSelf { (src/runtime/cell.rs:362)
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rsp, +, 40], -1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(key, &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, r13
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_45
[0m[0m[1m[38;5;10m.LBB187_203:
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mcopy_nonoverlapping(src, dst, count) (libcore/intrinsics.rs:1986)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsi, +, rbx, +, 8], rax
[0m     [0m[1m[38;5;12mmov    [0m r12, qword, ptr, [rsp, +, 184]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_204:
[0m     [0m[1m[38;5;9mSome(x) => Some(f(x)), (libcore/option.rs:458)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rbx
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_248
[0m     [0m[1m[38;5;9mSome(x) => Some(f(x)), (libcore/option.rs:458)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsi, +, r12, +, 8]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_249
[0m[0m[1m[38;5;10m.LBB187_206:
[0m     [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_264
[0m[0m[1m[38;5;10m.LBB187_207:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rsi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_262
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_263
[0m[0m[1m[38;5;10m.LBB187_209:
[0m     [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_269
[0m[0m[1m[38;5;10m.LBB187_210:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rsi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_267
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_268
[0m[0m[1m[38;5;10m.LBB187_212:
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 88]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_557
[0m[0m[1m[38;5;10m.LBB187_213:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12madd    [0m rax, r14
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -1125899906842624
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;9mif self.is_double() { (src/runtime/value.rs:346)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_273
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m [0m[1m[38;5;9mlet val = val.to_number().floor() as i32;
[0m [0m[1m[38;5;12mcvttsd2si[0m ebp, xmm0
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_276
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_401
[0m[0m[1m[38;5;10m.LBB187_215:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -1125899906842624
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;9mif self.is_double() { (src/runtime/value.rs:346)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_277
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_280
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_417
[0m[0m[1m[38;5;10m.LBB187_217:
[0m     [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_283
[0m[0m[1m[38;5;10m.LBB187_218:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_281
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbp
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_282
[0m[0m[1m[38;5;10m.LBB187_220:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12madd    [0m rcx, rdi
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -1125899906842624
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rsi
[0m     [0m[1m[38;5;9mif self.is_double() { (src/runtime/value.rs:346)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_286
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_289
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_433
[0m[0m[1m[38;5;10m.LBB187_222:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m r14, rax
[0m [0m[1m[38;5;9mif lhs.is_number() && rhs.is_number() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_295
[0m [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_295
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mlea    [0m rax, [r14, +, rbp]
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_292
[0m[0m[1m[38;5;10m.LBB187_225:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_293
[0m[0m[1m[38;5;10m.LBB187_226:
[0m     [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_312
[0m[0m[1m[38;5;10m.LBB187_227:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_310
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbp
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_311
[0m[0m[1m[38;5;10m.LBB187_229:
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m [0m[1m[38;5;9mif lhs.is_number() && rhs.is_number() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_231
[0m [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_316
[0m[0m[1m[38;5;10m.LBB187_231:
[0m [0m[1m[38;5;12mmovabs [0m rdx, 9221683186994511872
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_387
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_455
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_520
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_456
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_522
[0m[0m[1m[38;5;10m.LBB187_235:
[0m     [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_321
[0m[0m[1m[38;5;10m.LBB187_236:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rsi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_319
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_320
[0m[0m[1m[38;5;10m.LBB187_238:
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m [0m[1m[38;5;9mif lhs.is_number() && rhs.is_number() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_240
[0m [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_325
[0m[0m[1m[38;5;10m.LBB187_240:
[0m [0m[1m[38;5;12mmovabs [0m rdx, 9221683186994511872
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_393
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_458
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_536
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_459
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_538
[0m[0m[1m[38;5;10m.LBB187_244:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:329)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_328
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rdx, -, 1]
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_449
[0m     [0m[1m[38;5;12madd    [0m rax, rdx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m [0m[1m[38;5;9mif c {
[0m [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_0]
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_200
[0m [0m[1m[38;5;12mjnp    [0m[1m[38;5;10m .LBB187_450
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_200
[0m[0m[1m[38;5;10m.LBB187_247:
[0m [0m[1m[38;5;9mif let FeedBack::Cache(attrs, offset, misses) = feedback {
[0m [0m[1m[38;5;12mlea    [0m rax, [4*r13]
[0m [0m[1m[38;5;12madd    [0m rax, r13
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rcx, +, 8*rax, +, 2], 1
[0m [0m[1m[38;5;9mlda_by_id(&mut frame, base_r, key_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_248:
[0m [0m[1m[38;5;12mmov    [0m eax, 10
[0m[0m[1m[38;5;10m.LBB187_249:
[0m [0m[1m[38;5;12mmov    [0m r12, qword, ptr, [rsp, +, 184]
[0m [0m[1m[38;5;9mframe.rax = global.copied().unwrap_or(Value::from(VTag::Undefined));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_250:
[0m [0m[1m[38;5;12mmov    [0m eax, 10
[0m [0m[1m[38;5;9mframe.rax = val;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_251:
[0m [0m[1m[38;5;12mmov    [0m eax, 10
[0m[0m[1m[38;5;10m.LBB187_252:
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 8]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, rsi], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_253:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rdi
[0m     [0m[1m[38;5;12mor     [0m rdx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_992
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:326)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rdi, +, 32]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:326)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_4
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rsi, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_993
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12madd    [0m rax, 4
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rax]
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsi]
[0m     [0m[1m[38;5;9m*self (src/runtime/cell.rs:330)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, 8*rax], r8
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_257:
[0m     [0m[1m[38;5;9mreturn self.as_int32() as _; (src/runtime/value.rs:344)
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_280
[0m[0m[1m[38;5;10m.LBB187_417:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbp
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -1125899906842624
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;9mif self.is_double() { (src/runtime/value.rs:346)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_419
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_423
[0m[0m[1m[38;5;10m.LBB187_258:
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == Self::VALUE_EMPTY as _ } (src/runtime/value.rs:139)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rcx
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mcmovne [0m rax, rcx
[0m[0m[1m[38;5;10m.LBB187_259:
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_260:
[0m     [0m[1m[38;5;9mif size == 0 { (liballoc/alloc.rs:170)
[0m     [0m[1m[38;5;12mtest   [0m r14, r14
[0m     [0m[1m[38;5;9mif size == 0 { (liballoc/alloc.rs:170)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_460
[0m     [0m[1m[38;5;9m__rust_alloc(layout.size(), layout.align()) (liballoc/alloc.rs:80)
[0m     [0m[1m[38;5;12mmov    [0m esi, 4
[0m     [0m[1m[38;5;12mmov    [0m rdi, r14
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_alloc@GOTPCREL]
[0m     [0m[1m[38;5;9mOk(t) => Ok(t), (libcore/result.rs:611)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_556
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_957
[0m[0m[1m[38;5;10m.LBB187_262:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m[0m[1m[38;5;10m.LBB187_263:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m r14d, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_264:
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rcx
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_335
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rsi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_333
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rsi
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_334
[0m[0m[1m[38;5;10m.LBB187_267:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m[0m[1m[38;5;10m.LBB187_268:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m r14d, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_269:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_345
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rsi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_343
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rsi
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_344
[0m[0m[1m[38;5;10m.LBB187_272:
[0m     [0m[1m[38;5;12mmov    [0m ebp, r14d
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_401
[0m[0m[1m[38;5;10m.LBB187_273:
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mcmp    [0m r14, 6
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_274
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_4]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m r14, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_275
[0m[0m[1m[38;5;10m.LBB187_400:
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_0]
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m [0m[1m[38;5;9mlet val = val.to_number().floor() as i32;
[0m [0m[1m[38;5;12mcvttsd2si[0m ebp, xmm0
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_276
[0m[0m[1m[38;5;10m.LBB187_401:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -1125899906842624
[0m     [0m[1m[38;5;12mcmp    [0m rax, rcx
[0m     [0m[1m[38;5;9mif self.is_double() { (src/runtime/value.rs:346)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_403
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_407
[0m[0m[1m[38;5;10m.LBB187_274:
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m r14, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_400
[0m[0m[1m[38;5;10m.LBB187_275:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m [0m[1m[38;5;9mlet val = val.to_number().floor() as i32;
[0m [0m[1m[38;5;12mcvttsd2si[0m ebp, xmm0
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_401
[0m[0m[1m[38;5;10m.LBB187_276:
[0m     [0m[1m[38;5;9mreturn self.as_int32() as _; (src/runtime/value.rs:344)
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_407
[0m[0m[1m[38;5;10m.LBB187_403:
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 6
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_405
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_4]
[0m[0m[1m[38;5;10m.LBB187_405:
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_407
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_0]
[0m[0m[1m[38;5;10m.LBB187_407:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m [0m[1m[38;5;9mlet shift = shift.to_number().floor() as i32;
[0m [0m[1m[38;5;12mcvttsd2si[0m ecx, xmm0
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val << (shift & 0x1f));
[0m [0m[1m[38;5;12mshl    [0m ebp, cl
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rbp, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val << (shift & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rbp
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m r14, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_409
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_624
[0m[0m[1m[38;5;10m.LBB187_826:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_829
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_832
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_409:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m r14, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_412
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m r14, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, r14
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_477
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m r14, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, r14
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_624
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_826
[0m[0m[1m[38;5;10m.LBB187_277:
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 6
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_278
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_4]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_279
[0m[0m[1m[38;5;10m.LBB187_416:
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_0]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_280
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_417
[0m[0m[1m[38;5;10m.LBB187_278:
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_416
[0m[0m[1m[38;5;10m.LBB187_279:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_417
[0m[0m[1m[38;5;10m.LBB187_280:
[0m     [0m[1m[38;5;9mreturn self.as_int32() as _; (src/runtime/value.rs:344)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, ebp
[0m[0m[1m[38;5;10m.LBB187_423:
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() % rhs.to_number());
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, fmod@GOTPCREL]
[0m     [0m[1m[38;5;9mlet as_i32 = x as i32; (src/runtime/value.rs:522)
[0m     [0m[1m[38;5;12mcvttsd2si[0m eax, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, eax
[0m     [0m[1m[38;5;12mmov    [0m rcx, rax
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rcx, rdx
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mmovq   [0m rdx, xmm0
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsi, +, rdx, +, 1]
[0m     [0m[1m[38;5;12mcmovne [0m rcx, rdx
[0m     [0m[1m[38;5;12mcmovp  [0m rcx, rdx
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mtest   [0m eax, eax
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmovne [0m rcx, rdx
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mucomisd[0m xmm1, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmova  [0m rcx, rdx
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() % rhs.to_number());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_425
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_612
[0m[0m[1m[38;5;10m.LBB187_751:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_754
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbp, rdx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbp
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_757
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbp, rdx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbp
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m dl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m dl, dl
[0m     [0m[1m[38;5;12mor     [0m dl, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_765
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_769
[0m[0m[1m[38;5;10m.LBB187_425:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rsi
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_428
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_469
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_751
[0m[0m[1m[38;5;10m.LBB187_612:
[0m     [0m[1m[38;5;12mxor    [0m edx, edx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_765
[0m[0m[1m[38;5;10m.LBB187_769:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rsi
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_772
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_775
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rcx, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m sil
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m sil, sil
[0m     [0m[1m[38;5;12mor     [0m sil, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_281:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebp
[0m[0m[1m[38;5;10m.LBB187_282:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m r14d, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_283:
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rcx
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_355
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_353
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_354
[0m[0m[1m[38;5;10m.LBB187_435:
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_437
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, qword, ptr, [rip, +, .LCPI187_4]
[0m[0m[1m[38;5;10m.LBB187_437:
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_439
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, qword, ptr, [rip, +, .LCPI187_0]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_439
[0m[0m[1m[38;5;10m.LBB187_286:
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 6
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_287
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_4]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_288
[0m[0m[1m[38;5;10m.LBB187_432:
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, qword, ptr, [rip, +, .LCPI187_0]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_289
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_433
[0m[0m[1m[38;5;10m.LBB187_287:
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_432
[0m[0m[1m[38;5;10m.LBB187_288:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_433
[0m[0m[1m[38;5;10m.LBB187_289:
[0m     [0m[1m[38;5;9mreturn self.as_int32() as _; (src/runtime/value.rs:344)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, edx
[0m[0m[1m[38;5;10m.LBB187_439:
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() / rhs.to_number());
[0m [0m[1m[38;5;12mdivsd  [0m xmm0, xmm1
[0m     [0m[1m[38;5;9mlet as_i32 = x as i32; (src/runtime/value.rs:522)
[0m     [0m[1m[38;5;12mcvttsd2si[0m esi, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, esi
[0m     [0m[1m[38;5;12mmov    [0m rcx, rsi
[0m     [0m[1m[38;5;12mmovabs [0m rbp, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rcx, rbp
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mmovq   [0m rbp, xmm0
[0m     [0m[1m[38;5;12mmovabs [0m rbx, 562949953421311
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rbx, +, rbp, +, 1]
[0m     [0m[1m[38;5;12mcmovne [0m rcx, rbp
[0m     [0m[1m[38;5;12mcmovp  [0m rcx, rbp
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mtest   [0m esi, esi
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmovne [0m rcx, rbp
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mucomisd[0m xmm1, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmova  [0m rcx, rbp
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() / rhs.to_number());
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_441
[0m     [0m[1m[38;5;12mxor    [0m esi, esi
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_603
[0m[0m[1m[38;5;10m.LBB187_676:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rdi, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rdi
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_679
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rdi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, rdi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_682
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rdi, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rdx, rdi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m dil
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m dil, dil
[0m     [0m[1m[38;5;12mor     [0m dil, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_690
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_694
[0m[0m[1m[38;5;10m.LBB187_441:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, rbx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_444
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdi, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdi
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_461
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rdi, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdi
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m sil
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m sil, sil
[0m     [0m[1m[38;5;12mor     [0m sil, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_676
[0m[0m[1m[38;5;10m.LBB187_603:
[0m     [0m[1m[38;5;12mxor    [0m edi, edi
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_690
[0m[0m[1m[38;5;10m.LBB187_694:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_697
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_700
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rcx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_707
[0m[0m[1m[38;5;10m.LBB187_444:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_464
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_465
[0m     [0m[1m[38;5;12mmov    [0m sil, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_603
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_676
[0m[0m[1m[38;5;10m.LBB187_679:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_683
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_684
[0m     [0m[1m[38;5;12mmov    [0m dil, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_690
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_694
[0m[0m[1m[38;5;10m.LBB187_697:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_701
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_702
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_707
[0m[0m[1m[38;5;10m.LBB187_290:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m [0m[1m[38;5;9mif lhs.is_number() && rhs.is_number() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_295
[0m[0m[1m[38;5;10m.LBB187_291:
[0m     [0m[1m[38;5;9mreturn self.as_int32() as _; (src/runtime/value.rs:344)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, r14d
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_225
[0m[0m[1m[38;5;10m.LBB187_292:
[0m     [0m[1m[38;5;12mlea    [0m rax, [rbx, +, rbp]
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m[0m[1m[38;5;10m.LBB187_293:
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() + rhs.to_number());
[0m [0m[1m[38;5;12maddsd  [0m xmm0, xmm1
[0m     [0m[1m[38;5;9mlet as_i32 = x as i32; (src/runtime/value.rs:522)
[0m     [0m[1m[38;5;12mcvttsd2si[0m ecx, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, ecx
[0m     [0m[1m[38;5;12mmov    [0m rax, rcx
[0m     [0m[1m[38;5;12mor     [0m rax, rbp
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mmovq   [0m rdx, xmm0
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsi, +, rdx, +, 1]
[0m     [0m[1m[38;5;12mcmovne [0m rax, rdx
[0m     [0m[1m[38;5;12mcmovp  [0m rax, rdx
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mtest   [0m ecx, ecx
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmovne [0m rax, rdx
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mucomisd[0m xmm1, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmova  [0m rax, rdx
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m r14, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_307
[0m[0m[1m[38;5;10m.LBB187_294:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_608
[0m[0m[1m[38;5;10m.LBB187_714:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_717
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12madd    [0m rbx, rbp
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_720
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rdx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m dl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m dl, dl
[0m     [0m[1m[38;5;12mor     [0m dl, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_728
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_732
[0m[0m[1m[38;5;10m.LBB187_295:
[0m [0m[1m[38;5;9mframe.rax = local_data().allocate_string(
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 176], rax
[0m [0m[1m[38;5;12mlea    [0m rbp, [rsp, +, 208]
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 376]
[0m [0m[1m[38;5;9mformat!("{}{}", lhs.to_string(), rhs.to_string()),
[0m [0m[1m[38;5;12mmov    [0m rdi, rbp
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value9to_string17hd631185dab7314e7E@GOTPCREL]
[0m [0m[1m[38;5;12mlea    [0m r15, [rsp, +, 232]
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 200]
[0m [0m[1m[38;5;9mformat!("{}{}", lhs.to_string(), rhs.to_string()),
[0m [0m[1m[38;5;12mmov    [0m rdi, r15
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value9to_string17hd631185dab7314e7E@GOTPCREL]
[0m [0m[1m[38;5;9mformat!("{}{}", lhs.to_string(), rhs.to_string()),
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], rbp
[0m [0m[1m[38;5;12mlea    [0m rax, [rip, +, _ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h517b077bfbda8f02E]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 152], rax
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 160], r15
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 168], rax
[0m     [0m[1m[38;5;9mArguments { pieces, fmt: None, args } (libcore/fmt/mod.rs:328)
[0m     [0m[1m[38;5;12mlea    [0m rax, [rip, +, .L__unnamed_90]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 2
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 144]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 48], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 56], 2
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 264]
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mformat!("{}{}", lhs.to_string(), rhs.to_string()),
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN5alloc3fmt6format17hf6896c61c4aa13beE@GOTPCREL]
[0m     [0m[1m[38;5;9mpub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) { (libcore/ptr/mod.rs:180)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 232]
[0m     [0m[1m[38;5;9mif let Some((ptr, layout)) = self.current_memory() { (liballoc/raw_vec.rs:594)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rdi
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_302
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 240]
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_302
[0m     [0m[1m[38;5;9m__rust_dealloc(ptr, layout.size(), layout.align()) (liballoc/alloc.rs:102)
[0m     [0m[1m[38;5;12mmov    [0m edx, 1
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_302:
[0m     [0m[1m[38;5;9mpub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) { (libcore/ptr/mod.rs:180)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 208]
[0m     [0m[1m[38;5;9mif let Some((ptr, layout)) = self.current_memory() { (liballoc/raw_vec.rs:594)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rdi
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_305
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 216]
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_305
[0m     [0m[1m[38;5;9m__rust_dealloc(ptr, layout.size(), layout.align()) (liballoc/alloc.rs:102)
[0m     [0m[1m[38;5;12mmov    [0m edx, 1
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_305:
[0m [0m[1m[38;5;9mformat!("{}{}", lhs.to_string(), rhs.to_string()),
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 264]
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 280]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], rax
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 176]
[0m [0m[1m[38;5;9mframe.rax = local_data().allocate_string(
[0m [0m[1m[38;5;12mmov    [0m rdx, r12
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::runtime::process::LocalData::allocate_string
[0m [0m[1m[38;5;12mmovabs [0m rbp, -562949953421312
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m r14, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_294
[0m[0m[1m[38;5;10m.LBB187_307:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m r14, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_330
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12madd    [0m r14, rbp
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, r14
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_468
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m r14, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, r14
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_714
[0m[0m[1m[38;5;10m.LBB187_608:
[0m     [0m[1m[38;5;12mxor    [0m edx, edx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_728
[0m[0m[1m[38;5;10m.LBB187_732:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rax, rsi
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_735
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12madd    [0m rax, rbp
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_738
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rax, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m sil
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m sil, sil
[0m     [0m[1m[38;5;12mor     [0m sil, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_310:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebp
[0m[0m[1m[38;5;10m.LBB187_311:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m r14d, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_312:
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rcx
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_365
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_363
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_364
[0m[0m[1m[38;5;10m.LBB187_315:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m [0m[1m[38;5;9mif lhs.is_number() && rhs.is_number() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_447
[0m[0m[1m[38;5;10m.LBB187_316:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_383
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_384
[0m[0m[1m[38;5;10m.LBB187_318:
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, ecx
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_385
[0m[0m[1m[38;5;10m.LBB187_319:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m[0m[1m[38;5;10m.LBB187_320:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m r14d, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_321:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rax
[0m     [0m[1m[38;5;9mif self.is_number() { (src/runtime/value.rs:214)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_375
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 8], rsi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_373
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rsi
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_374
[0m[0m[1m[38;5;10m.LBB187_324:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m [0m[1m[38;5;9mif lhs.is_number() && rhs.is_number() {
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_448
[0m[0m[1m[38;5;10m.LBB187_325:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_389
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, rbx
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_390
[0m[0m[1m[38;5;10m.LBB187_327:
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, ecx
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_391
[0m[0m[1m[38;5;10m.LBB187_328:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rax
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9mif self.is_bool() { (src/runtime/value.rs:332)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_451
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rax, 7
[0m [0m[1m[38;5;9mif c {
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_200
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_450
[0m[0m[1m[38;5;10m.LBB187_330:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m r14, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_470
[0m     [0m[1m[38;5;12mcmp    [0m r14, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_471
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_608
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_714
[0m[0m[1m[38;5;10m.LBB187_717:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_721
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_722
[0m     [0m[1m[38;5;12mmov    [0m dl, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_728
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_732
[0m[0m[1m[38;5;10m.LBB187_735:
[0m     [0m[1m[38;5;12mmov    [0m sil, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rax, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_744
[0m     [0m[1m[38;5;12mcmp    [0m rax, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_739
[0m     [0m[1m[38;5;12mmov    [0m sil, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_419:
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 6
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_421
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, qword, ptr, [rip, +, .LCPI187_4]
[0m[0m[1m[38;5;10m.LBB187_421:
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == other.u.as_int64 } (src/runtime/value.rs:532)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 7
[0m     [0m[1m[38;5;9mif self.is_true() { (src/runtime/value.rs:354)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_423
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, qword, ptr, [rip, +, .LCPI187_0]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_423
[0m[0m[1m[38;5;10m.LBB187_428:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_476
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_479
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_612
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_751
[0m[0m[1m[38;5;10m.LBB187_754:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_758
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_759
[0m     [0m[1m[38;5;12mmov    [0m dl, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_765
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_769
[0m[0m[1m[38;5;10m.LBB187_772:
[0m     [0m[1m[38;5;12mmov    [0m sil, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_781
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_776
[0m     [0m[1m[38;5;12mmov    [0m sil, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_333:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, esi
[0m[0m[1m[38;5;10m.LBB187_334:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m eax, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_335:
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.to_int32() & src2.to_int32() as i32);
[0m [0m[1m[38;5;12mand    [0m eax, r14d
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.to_int32() & src2.to_int32() as i32);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_337
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_616
[0m[0m[1m[38;5;10m.LBB187_788:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_791
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rsi
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_794
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rsi, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rsi
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_337:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_340
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_474
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_616
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_788
[0m[0m[1m[38;5;10m.LBB187_340:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_484
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_485
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_616
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_788
[0m[0m[1m[38;5;10m.LBB187_791:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_800
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_795
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_343:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, esi
[0m[0m[1m[38;5;10m.LBB187_344:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m ecx, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_345:
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val >> (shift & 0x1f));
[0m [0m[1m[38;5;12msar    [0m r14d, cl
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m r14, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(val >> (shift & 0x1f));
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], r14
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_347
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_620
[0m[0m[1m[38;5;10m.LBB187_807:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_810
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rsi
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_813
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rsi, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rsi
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_347:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_350
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_475
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_620
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_807
[0m[0m[1m[38;5;10m.LBB187_350:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_488
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_491
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_620
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_807
[0m[0m[1m[38;5;10m.LBB187_810:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_819
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_814
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_412:
[0m     [0m[1m[38;5;12mcmp    [0m r14, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_489
[0m     [0m[1m[38;5;12mcmp    [0m r14, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_494
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_624
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_826
[0m[0m[1m[38;5;10m.LBB187_829:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_838
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_833
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_353:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m[0m[1m[38;5;10m.LBB187_354:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m eax, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_355:
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.to_int32() ^ src2.to_int32() as i32);
[0m [0m[1m[38;5;12mxor    [0m eax, r14d
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.to_int32() ^ src2.to_int32() as i32);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_357
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_628
[0m[0m[1m[38;5;10m.LBB187_845:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_848
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_851
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_357:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_360
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbp, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbp
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_478
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbp, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbp
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_628
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_845
[0m[0m[1m[38;5;10m.LBB187_360:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_490
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_499
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_628
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_845
[0m[0m[1m[38;5;10m.LBB187_848:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_857
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_852
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_363:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m[0m[1m[38;5;10m.LBB187_364:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m eax, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_365:
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.to_int32() | src2.to_int32() as i32);
[0m [0m[1m[38;5;12mor     [0m eax, r14d
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(src1.to_int32() | src2.to_int32() as i32);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_367
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_632
[0m[0m[1m[38;5;10m.LBB187_864:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_867
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_870
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_367:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbp, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_370
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbp, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbp
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_482
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbp, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbp
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_632
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_864
[0m[0m[1m[38;5;10m.LBB187_370:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_497
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_502
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_632
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_864
[0m[0m[1m[38;5;10m.LBB187_867:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_876
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_871
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_373:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, esi
[0m[0m[1m[38;5;10m.LBB187_374:
[0m     [0m[1m[38;5;9munsafe { intrinsics::floorf64(self) } (libstd/f64.rs:50)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, floor@GOTPCREL]
[0m     [0m[1m[38;5;9mself.to_number().floor() as i32 (src/runtime/value.rs:215)
[0m     [0m[1m[38;5;12mcvttsd2si[0m ecx, xmm0
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 8]
[0m[0m[1m[38;5;10m.LBB187_375:
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(((val as u32) >> (shift as u32 & 0x1f)) as i32);
[0m [0m[1m[38;5;12mshr    [0m r14d, cl
[0m     [0m[1m[38;5;9mas_int64: Self::NUMBER_TAG | unsafe { std::mem::transmute::<i32, u32>(x) as i64 }, (src/runtime/value.rs:128)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12mor     [0m r14, rax
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(((val as u32) >> (shift as u32 & 0x1f)) as i32);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], r14
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_377
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_636
[0m[0m[1m[38;5;10m.LBB187_886:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_889
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rsi
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_892
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rsi, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rsi
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_377:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rax
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_380
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_483
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_636
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_886
[0m[0m[1m[38;5;10m.LBB187_380:
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_498
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_505
[0m     [0m[1m[38;5;12mmov    [0m al, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_636
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_886
[0m[0m[1m[38;5;10m.LBB187_889:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_898
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_893
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_383:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_318
[0m[0m[1m[38;5;10m.LBB187_384:
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rax, [rcx, +, rsi]
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rax
[0m[0m[1m[38;5;10m.LBB187_385:
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() + rhs.to_number());
[0m [0m[1m[38;5;12maddsd  [0m xmm0, xmm1
[0m     [0m[1m[38;5;9mlet as_i32 = x as i32; (src/runtime/value.rs:522)
[0m     [0m[1m[38;5;12mcvttsd2si[0m eax, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, eax
[0m     [0m[1m[38;5;12mmov    [0m rdx, rax
[0m     [0m[1m[38;5;12mor     [0m rdx, rsi
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mmovq   [0m rbp, xmm0
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rsi, +, rbp, +, 1]
[0m     [0m[1m[38;5;12mcmovne [0m rdx, rbp
[0m     [0m[1m[38;5;12mcmovp  [0m rdx, rbp
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mtest   [0m eax, eax
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmovne [0m rdx, rbp
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mucomisd[0m xmm1, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmova  [0m rdx, rbp
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_387
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_456
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_522
[0m[0m[1m[38;5;10m.LBB187_387:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_454
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_456
[0m[0m[1m[38;5;10m.LBB187_522:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rsi
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_525
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_530
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rcx, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m dil
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m dil, dil
[0m     [0m[1m[38;5;12mor     [0m dil, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_535
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_644
[0m[0m[1m[38;5;10m.LBB187_389:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, ebx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:343)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_327
[0m[0m[1m[38;5;10m.LBB187_390:
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rax, [rcx, +, rsi]
[0m     [0m[1m[38;5;12mmovq   [0m xmm1, rax
[0m[0m[1m[38;5;10m.LBB187_391:
[0m [0m[1m[38;5;9mframe.rax = Value::from(lhs.to_number() + rhs.to_number());
[0m [0m[1m[38;5;12maddsd  [0m xmm0, xmm1
[0m     [0m[1m[38;5;9mlet as_i32 = x as i32; (src/runtime/value.rs:522)
[0m     [0m[1m[38;5;12mcvttsd2si[0m eax, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mxorps  [0m xmm1, xmm1
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm1, eax
[0m     [0m[1m[38;5;12mmov    [0m rdx, rax
[0m     [0m[1m[38;5;12mor     [0m rdx, rsi
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm1
[0m     [0m[1m[38;5;12mmovq   [0m rbp, xmm0
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mlea    [0m rbp, [rsi, +, rbp, +, 1]
[0m     [0m[1m[38;5;12mcmovne [0m rdx, rbp
[0m     [0m[1m[38;5;12mcmovp  [0m rdx, rbp
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mtest   [0m eax, eax
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmovne [0m rdx, rbp
[0m     [0m[1m[38;5;12mpxor   [0m xmm1, xmm1
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mucomisd[0m xmm1, xmm0
[0m     [0m[1m[38;5;9mif as_i32 as f64 != x || !(as_i32 == 0 && signbit!(x)) { (src/runtime/value.rs:523)
[0m     [0m[1m[38;5;12mcmova  [0m rdx, rbp
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_393
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_459
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_538
[0m[0m[1m[38;5;10m.LBB187_393:
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_457
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rax, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rbx, rax
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rbx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m al
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12mor     [0m al, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_459
[0m[0m[1m[38;5;10m.LBB187_538:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rsi
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_541
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_546
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rcx, rsi
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rcx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m dil
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m dil, dil
[0m     [0m[1m[38;5;12mor     [0m dil, 1
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_551
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_660
[0m[0m[1m[38;5;10m.LBB187_395:
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == Self::VALUE_EMPTY as _ } (src/runtime/value.rs:139)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rcx
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mcmovne [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_396:
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == Self::VALUE_EMPTY as _ } (src/runtime/value.rs:139)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rcx
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mcmovne [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_397:
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == Self::VALUE_EMPTY as _ } (src/runtime/value.rs:139)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rcx
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mcmovne [0m rax, rcx
[0m[0m[1m[38;5;10m.LBB187_398:
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_447:
[0m [0m[1m[38;5;12mmovabs [0m rdx, 9221683186994511872
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m [0m[1m[38;5;12mxor    [0m eax, eax
[0m[0m[1m[38;5;10m.LBB187_525:
[0m [0m[1m[38;5;12mmov    [0m dil, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_534
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_528
[0m     [0m[1m[38;5;12mmov    [0m dil, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_535
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_644
[0m[0m[1m[38;5;10m.LBB187_448:
[0m     [0m[1m[38;5;12mmovabs [0m rdx, 9221683186994511872
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m[0m[1m[38;5;10m.LBB187_541:
[0m     [0m[1m[38;5;12mmov    [0m dil, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_550
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_544
[0m     [0m[1m[38;5;12mmov    [0m dil, 10
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_551
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_660
[0m[0m[1m[38;5;10m.LBB187_449:
[0m     [0m[1m[38;5;12mxorps  [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mcvtsi2sd[0m xmm0, eax
[0m [0m[1m[38;5;9mif c {
[0m [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_0]
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_200
[0m [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_200
[0m[0m[1m[38;5;10m.LBB187_450:
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 80], rbx
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 72], 0
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_451:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rcx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rax, rcx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_200
[0m     [0m[1m[38;5;12mcmp    [0m rax, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_450
[0m     [0m[1m[38;5;12mmov    [0m ecx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rcx, rax
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_200
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_450
[0m[0m[1m[38;5;10m.LBB187_454:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m[0m[1m[38;5;10m.LBB187_455:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_522
[0m[0m[1m[38;5;10m.LBB187_456:
[0m     [0m[1m[38;5;12mxor    [0m edi, edi
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_535
[0m[0m[1m[38;5;10m.LBB187_644:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_647
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_650
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rdx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_647:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_656
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_651
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_457:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m[0m[1m[38;5;10m.LBB187_458:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_538
[0m[0m[1m[38;5;10m.LBB187_459:
[0m     [0m[1m[38;5;12mxor    [0m edi, edi
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_551
[0m[0m[1m[38;5;10m.LBB187_660:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG) != 0 } (src/runtime/value.rs:179)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 562949953421311
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rcx
[0m     [0m[1m[38;5;9m} else if self.is_number() { (src/runtime/value.rs:367)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_663
[0m     [0m[1m[38;5;9m!self.is_int32() && self.is_number() (src/runtime/value.rs:183)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdx
[0m     [0m[1m[38;5;9mself != self (libcore/num/f64.rs:238)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, xmm0
[0m     [0m[1m[38;5;9mif self.to_number().is_nan() { (src/runtime/value.rs:368)
[0m     [0m[1m[38;5;12mjp     [0m[1m[38;5;10m .LBB187_666
[0m     [0m[1m[38;5;9mf64::from_bits(self.to_bits() & 0x7fff_ffff_ffff_ffff) (libcore/num/f64.rs:246)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, 9223372036854775807
[0m     [0m[1m[38;5;12mand    [0m rdx, rcx
[0m     [0m[1m[38;5;9munsafe { mem::transmute(v) } (libcore/num/f64.rs:567)
[0m     [0m[1m[38;5;12mmovq   [0m xmm0, rdx
[0m     [0m[1m[38;5;9mself.abs_private() == Self::INFINITY (libcore/num/f64.rs:267)
[0m     [0m[1m[38;5;12mucomisd[0m xmm0, qword, ptr, [rip, +, .LCPI187_3]
[0m     [0m[1m[38;5;12msetae  [0m cl
[0m     [0m[1m[38;5;9m} else if self.to_number().is_infinite() { (src/runtime/value.rs:370)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12mor     [0m cl, 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_663:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;9m} else if self.is_null() { (src/runtime/value.rs:375)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_672
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_667
[0m     [0m[1m[38;5;12mmov    [0m cl, 10
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_76:
[0m     [0m[1m[38;5;9mReallocPlacement::MayMove if layout.size() == 0 => { (liballoc/alloc.rs:211)
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_552
[0m     [0m[1m[38;5;9m__rust_realloc(ptr, layout.size(), layout.align(), new_size) (liballoc/alloc.rs:124)
[0m     [0m[1m[38;5;12mmov    [0m edx, 4
[0m     [0m[1m[38;5;12mmov    [0m rdi, rax
[0m     [0m[1m[38;5;12mmov    [0m rcx, r14
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_realloc@GOTPCREL]
[0m     [0m[1m[38;5;9mOk(t) => Ok(t), (libcore/result.rs:611)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_555
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_957
[0m[0m[1m[38;5;10m.LBB187_461:
[0m     [0m[1m[38;5;12mmov    [0m sil, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_603
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_676
[0m[0m[1m[38;5;10m.LBB187_682:
[0m     [0m[1m[38;5;12mmov    [0m dil, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_690
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_694
[0m[0m[1m[38;5;10m.LBB187_700:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_707
[0m[0m[1m[38;5;10m.LBB187_528:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rsi, rcx
[0m     [0m[1m[38;5;12mand    [0m rsi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_531
[0m     [0m[1m[38;5;12mmov    [0m dil, 4
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_535
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_644
[0m[0m[1m[38;5;10m.LBB187_544:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rsi, rcx
[0m     [0m[1m[38;5;12mand    [0m rsi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_547
[0m     [0m[1m[38;5;12mmov    [0m dil, 4
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_551
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_660
[0m[0m[1m[38;5;10m.LBB187_462:
[0m [0m[1m[38;5;12mlea    [0m rax, [rcx, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 8
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rdx, +, 48]
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rax]
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_558
[0m [0m[1m[38;5;12mlea    [0m rax, [rcx, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 2
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9mlda_by_id(&mut frame, base_r, key_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_465:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rbp, rdi
[0m     [0m[1m[38;5;12mand    [0m rbp, -2
[0m     [0m[1m[38;5;12mmov    [0m sil, 4
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_602
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_600
[0m[0m[1m[38;5;10m.LBB187_464:
[0m     [0m[1m[38;5;12mmov    [0m sil, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_603
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_676
[0m[0m[1m[38;5;10m.LBB187_684:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rbp, rdx
[0m     [0m[1m[38;5;12mand    [0m rbp, -2
[0m     [0m[1m[38;5;12mmov    [0m dil, 4
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_689
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rdi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_687
[0m[0m[1m[38;5;10m.LBB187_683:
[0m     [0m[1m[38;5;12mmov    [0m dil, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_690
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_694
[0m[0m[1m[38;5;10m.LBB187_702:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rcx
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_707
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_705
[0m[0m[1m[38;5;10m.LBB187_701:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_707
[0m[0m[1m[38;5;10m.LBB187_468:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_608
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_714
[0m[0m[1m[38;5;10m.LBB187_720:
[0m     [0m[1m[38;5;12mmov    [0m dl, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_728
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_732
[0m[0m[1m[38;5;10m.LBB187_738:
[0m     [0m[1m[38;5;12mmov    [0m sil, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_469:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_612
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_751
[0m[0m[1m[38;5;10m.LBB187_757:
[0m     [0m[1m[38;5;12mmov    [0m dl, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_765
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_769
[0m[0m[1m[38;5;10m.LBB187_775:
[0m     [0m[1m[38;5;12mmov    [0m sil, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_471:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, r14
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_607
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rbp, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m r14, rcx
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_605
[0m[0m[1m[38;5;10m.LBB187_470:
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_608
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_714
[0m[0m[1m[38;5;10m.LBB187_722:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rsi, rbx
[0m     [0m[1m[38;5;12mand    [0m rsi, -2
[0m     [0m[1m[38;5;12mmov    [0m dl, 4
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_727
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rbp, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rdx
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_725
[0m[0m[1m[38;5;10m.LBB187_721:
[0m     [0m[1m[38;5;12mmov    [0m dl, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_728
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_732
[0m[0m[1m[38;5;10m.LBB187_739:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdi, rax
[0m     [0m[1m[38;5;12mand    [0m rdi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_741
[0m     [0m[1m[38;5;12mmov    [0m sil, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_474:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_616
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_788
[0m[0m[1m[38;5;10m.LBB187_794:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_475:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_620
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_807
[0m[0m[1m[38;5;10m.LBB187_813:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_477:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_624
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_826
[0m[0m[1m[38;5;10m.LBB187_832:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_478:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_628
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_845
[0m[0m[1m[38;5;10m.LBB187_851:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_479:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rbx
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_611
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_609
[0m[0m[1m[38;5;10m.LBB187_476:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_612
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_751
[0m[0m[1m[38;5;10m.LBB187_759:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rsi, rbp
[0m     [0m[1m[38;5;12mand    [0m rsi, -2
[0m     [0m[1m[38;5;12mmov    [0m dl, 4
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_764
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbp, rdx
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_762
[0m[0m[1m[38;5;10m.LBB187_758:
[0m     [0m[1m[38;5;12mmov    [0m dl, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_765
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_769
[0m[0m[1m[38;5;10m.LBB187_776:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdi, rcx
[0m     [0m[1m[38;5;12mand    [0m rdi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_778
[0m     [0m[1m[38;5;12mmov    [0m sil, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_482:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_632
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_864
[0m[0m[1m[38;5;10m.LBB187_870:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_650:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_483:
[0m     [0m[1m[38;5;12mmov    [0m al, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_636
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_886
[0m[0m[1m[38;5;10m.LBB187_892:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_666:
[0m     [0m[1m[38;5;12mmov    [0m cl, 2
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_485:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rbx
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_615
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_613
[0m[0m[1m[38;5;10m.LBB187_484:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_616
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_788
[0m[0m[1m[38;5;10m.LBB187_795:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rsi
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_797
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_491:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rbx
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_619
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_617
[0m[0m[1m[38;5;10m.LBB187_488:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_620
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_807
[0m[0m[1m[38;5;10m.LBB187_814:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rsi
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_816
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_494:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, r14
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_623
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m r14, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_621
[0m[0m[1m[38;5;10m.LBB187_489:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_624
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_826
[0m[0m[1m[38;5;10m.LBB187_833:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rbx
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_835
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_499:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rbp
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_627
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbp, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_625
[0m[0m[1m[38;5;10m.LBB187_490:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_628
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_845
[0m[0m[1m[38;5;10m.LBB187_852:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rbx
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_854
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_502:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rbp
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_631
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbp, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_629
[0m[0m[1m[38;5;10m.LBB187_497:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_632
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_864
[0m[0m[1m[38;5;10m.LBB187_871:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rbx
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_873
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_651:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rsi, rdx
[0m     [0m[1m[38;5;12mand    [0m rsi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_653
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_505:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rbx
[0m     [0m[1m[38;5;12mand    [0m rcx, -2
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_635
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rax, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rax, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_633
[0m[0m[1m[38;5;10m.LBB187_498:
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_636
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_886
[0m[0m[1m[38;5;10m.LBB187_893:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdx, rsi
[0m     [0m[1m[38;5;12mand    [0m rdx, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_895
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_667:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rsi, rdx
[0m     [0m[1m[38;5;12mand    [0m rsi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_669
[0m     [0m[1m[38;5;12mmov    [0m cl, 4
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_508:
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rsp, +, 16]
[0m [0m[1m[38;5;9mbase.lookup(Symbol::new_value(key), &mut slot);
[0m [0m[1m[38;5;12mmov    [0m rsi, rax
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value6lookup17h35588436e8a30a8cE@GOTPCREL]
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 24]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;9mif self.value.is_null() { (src/runtime/cell.rs:377)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_571
[0m     [0m[1m[38;5;9m*self.value (src/runtime/cell.rs:384)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax]
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_530:
[0m [0m[1m[38;5;12mmov    [0m dil, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_535
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_644
[0m[0m[1m[38;5;10m.LBB187_546:
[0m     [0m[1m[38;5;12mmov    [0m dil, 2
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_551
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_660
[0m[0m[1m[38;5;10m.LBB187_511:
[0m [0m[1m[38;5;12mlea    [0m rbp, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rbp, 8
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rdx, +, 48]
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rbp]
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_584
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 2
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9mlda_by_idx(&mut frame, base_r, idx_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_idx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_513:
[0m [0m[1m[38;5;12mlea    [0m rbp, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rbp, 8
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rdx, +, 48]
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rbp]
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_590
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 2
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9mlda_by_idx(&mut frame, base_r, idx_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_idx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_531:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rsi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_534
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_641
[0m     [0m[1m[38;5;12mmov    [0m esi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rsi, rcx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_641
[0m[0m[1m[38;5;10m.LBB187_534:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_644
[0m[0m[1m[38;5;10m.LBB187_535:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_656:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m edx, dil
[0m [0m[1m[38;5;12mshl    [0m edx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, edx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], cl
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_979
[0m[0m[1m[38;5;10m.LBB187_547:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rsi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_550
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_657
[0m     [0m[1m[38;5;12mmov    [0m esi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rsi, rcx
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_657
[0m[0m[1m[38;5;10m.LBB187_550:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_660
[0m[0m[1m[38;5;10m.LBB187_551:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_672:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m edx, dil
[0m [0m[1m[38;5;12mshl    [0m edx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, edx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], cl
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_994
[0m[0m[1m[38;5;10m.LBB187_515:
[0m [0m[1m[38;5;12mlea    [0m rax, [rcx, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 2
[0m [0m[1m[38;5;9mif let Some(proto) = base.as_cell().prototype {
[0m [0m[1m[38;5;12mcmp    [0m qword, ptr, [rdx, +, 16], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_570
[0m [0m[1m[38;5;12mlea    [0m r8, [rcx, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m r8, 8
[0m [0m[1m[38;5;9mif let Some(proto) = base.as_cell().prototype {
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 24]
[0m [0m[1m[38;5;9mif proto.attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rdx, +, 48]
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [r8]
[0m [0m[1m[38;5;9mif proto.attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_637
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9mlda_by_id(&mut frame, base_r, key_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_518:
[0m [0m[1m[38;5;12mlea    [0m rbp, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rbp, 8
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rdx, +, 48]
[0m     [0m[1m[38;5;9mself.inner.as_ptr() == other.inner.as_ptr() (src/arc.rs:75)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, qword, ptr, [rbp]
[0m [0m[1m[38;5;9mif base.as_cell().attributes.ptr_eq(attrs) {
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_596
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 2
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9msta_by_idx(&mut frame, base_r, idx_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::sta_by_idx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_520:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mand    [0m rdi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_572
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_456
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_522
[0m[0m[1m[38;5;10m.LBB187_536:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & !1) == Self::VALUE_FALSE as _ } (src/runtime/value.rs:164)
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mand    [0m rdi, -2
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 6
[0m     [0m[1m[38;5;9m} else if self.is_bool() { (src/runtime/value.rs:379)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_578
[0m     [0m[1m[38;5;12mmov    [0m al, 4
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_459
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_538
[0m[0m[1m[38;5;10m.LBB187_552:
[0m     [0m[1m[38;5;9mif size == 0 { (liballoc/alloc.rs:170)
[0m     [0m[1m[38;5;12mtest   [0m r14, r14
[0m     [0m[1m[38;5;9mif size == 0 { (liballoc/alloc.rs:170)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_460
[0m     [0m[1m[38;5;9m__rust_alloc(layout.size(), layout.align()) (liballoc/alloc.rs:80)
[0m     [0m[1m[38;5;12mmov    [0m esi, 4
[0m     [0m[1m[38;5;12mmov    [0m rdi, r14
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_alloc@GOTPCREL]
[0m     [0m[1m[38;5;9mOk(t) => Ok(t), (libcore/result.rs:611)
[0m     [0m[1m[38;5;12mtest   [0m rax, rax
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_957
[0m[0m[1m[38;5;10m.LBB187_555:
[0m     [0m[1m[38;5;9mlet end = self.as_mut_ptr().add(self.len); (liballoc/vec.rs:1204)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [r12, +, 104]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_556
[0m[0m[1m[38;5;10m.LBB187_460:
[0m     [0m[1m[38;5;12mmov    [0m eax, 4
[0m[0m[1m[38;5;10m.LBB187_556:
[0m     [0m[1m[38;5;9mself.ptr = memory.ptr.cast().into(); (liballoc/raw_vec.rs:472)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 88], rax
[0m     [0m[1m[38;5;9mexcess / mem::size_of::<T>() (liballoc/raw_vec.rs:468)
[0m     [0m[1m[38;5;12mshr    [0m r14, 2
[0m     [0m[1m[38;5;9mself.cap = Self::capacity_from_bytes(memory.size); (liballoc/raw_vec.rs:473)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [r12, +, 96], r14
[0m[0m[1m[38;5;10m.LBB187_557:
[0m     [0m[1m[38;5;9mintrinsics::move_val_init(&mut *dst, src) (libcore/ptr/mod.rs:817)
[0m     [0m[1m[38;5;12mmov    [0m dword, ptr, [rax, +, 4*rbp], ebx
[0m     [0m[1m[38;5;9mself.len += 1; (liballoc/vec.rs:1206)
[0m     [0m[1m[38;5;12madd    [0m qword, ptr, [r12, +, 104], 1
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_741:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rbp, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rax, rdi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_744
[0m     [0m[1m[38;5;12mcmp    [0m rax, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_745
[0m     [0m[1m[38;5;12mmov    [0m edi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdi, rax
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_745:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rax]
[0m     [0m[1m[38;5;12mmov    [0m sil, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_744
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rax, 8
[0m     [0m[1m[38;5;12mcmp    [0m rax, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_980
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 3
[0m     [0m[1m[38;5;12msete   [0m sil
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m sil, sil
[0m     [0m[1m[38;5;12madd    [0m sil, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_744
[0m[0m[1m[38;5;10m.LBB187_778:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rdi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_781
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_782
[0m     [0m[1m[38;5;12mmov    [0m edi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdi, rcx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_782:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rcx]
[0m     [0m[1m[38;5;12mmov    [0m sil, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_781
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1000
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 3
[0m     [0m[1m[38;5;12msete   [0m sil
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m sil, sil
[0m     [0m[1m[38;5;12madd    [0m sil, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_781
[0m[0m[1m[38;5;10m.LBB187_558:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mmov    [0m rax, rdx
[0m     [0m[1m[38;5;12mor     [0m rax, 8
[0m     [0m[1m[38;5;12mcmp    [0m rax, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_971
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 32]
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_259
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rdx, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_964
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rcx, +, 8*rdi]
[0m     [0m[1m[38;5;12madd    [0m rcx, 4
[0m     [0m[1m[38;5;12mmov    [0m ecx, dword, ptr, [rcx]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mcmp    [0m ecx, dword, ptr, [rdx, +, 16]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_259
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdx]
[0m     [0m[1m[38;5;9munsafe { *self.slots.as_ref().unwrap().get_unchecked(offset as usize) } (src/runtime/cell.rs:89)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_797:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rsi, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_800
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_801
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rsi
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_801:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsi]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_800
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rsi, 8
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_982
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_800
[0m[0m[1m[38;5;10m.LBB187_816:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rsi, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_819
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_820
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rsi
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_820:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsi]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_819
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rsi, 8
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1002
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_819
[0m[0m[1m[38;5;10m.LBB187_835:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_838
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_839
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rbx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_839:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_838
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_985
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_838
[0m[0m[1m[38;5;10m.LBB187_854:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_857
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_858
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rbx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_858:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_857
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_986
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_857
[0m[0m[1m[38;5;10m.LBB187_873:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_876
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_877
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rbx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_877:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_876
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1003
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_876
[0m[0m[1m[38;5;10m.LBB187_653:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rsi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_656
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_880
[0m     [0m[1m[38;5;12mmov    [0m esi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rsi, rdx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_880:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rdx]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_656
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rdx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_990
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_656
[0m[0m[1m[38;5;10m.LBB187_895:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rdx, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rdx, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rsi, rdx
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_898
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_909
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rsi
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_909:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rsi]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_898
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rsi, 8
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1004
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_898
[0m[0m[1m[38;5;10m.LBB187_669:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12madd    [0m rsi, 2
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rdx, rsi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_672
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_912
[0m     [0m[1m[38;5;12mmov    [0m esi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rsi, rdx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_912:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rdx]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_672
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rdx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_951
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_672
[0m[0m[1m[38;5;10m.LBB187_563:
[0m [0m[1m[38;5;9mFunctionCode::Native(fun) => {
[0m [0m[1m[38;5;12mmov    [0m r14, qword, ptr, [rbp, +, 96]
[0m [0m[1m[38;5;9mlet mut f = Frame::native_frame(frame.rax, args, func.module);
[0m [0m[1m[38;5;12mmov    [0m r15, qword, ptr, [r12]
[0m [0m[1m[38;5;9mlet mut f = Frame::native_frame(frame.rax, args, func.module);
[0m [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rbp, +, 120]
[0m     [0m[1m[38;5;9mVec { buf: RawVec::NEW, len: 0 } (liballoc/vec.rs:324)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 144], 4
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 152]
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rax], xmm0
[0m     [0m[1m[38;5;9mlet result = unsafe { PAGE_SIZE_BITS }; (src/common/mem.rs:19)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rip, +, _ZN6jlight6common3mem14PAGE_SIZE_BITS17hd4aab45525d7d8ceE]
[0m     [0m[1m[38;5;9mif result != 0 { (src/common/mem.rs:21)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rcx
[0m     [0m[1m[38;5;9mif result != 0 { (src/common/mem.rs:21)
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_566
[0m     [0m[1m[38;5;9minit_page_size(); (src/common/mem.rs:25)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::common::mem::init_page_size
[0m     [0m[1m[38;5;9munsafe { PAGE_SIZE_BITS } (src/common/mem.rs:27)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rip, +, _ZN6jlight6common3mem14PAGE_SIZE_BITS17hd4aab45525d7d8ceE]
[0m[0m[1m[38;5;10m.LBB187_566:
[0m     [0m[1m[38;5;12mmov    [0m esi, 1
[0m     [0m[1m[38;5;9m((val + (1 << align) - 1) >> align) << align (src/common/mem.rs:151)
[0m     [0m[1m[38;5;12mshl    [0m rsi, cl
[0m     [0m[1m[38;5;9m((val + (1 << align) - 1) >> align) << align (src/common/mem.rs:151)
[0m     [0m[1m[38;5;12madd    [0m rsi, 2047
[0m     [0m[1m[38;5;9m((val + (1 << align) - 1) >> align) << align (src/common/mem.rs:151)
[0m     [0m[1m[38;5;12mshr    [0m rsi, cl
[0m     [0m[1m[38;5;12mshl    [0m rsi, cl
[0m     [0m[1m[38;5;9mlibc::mmap( (src/common/mem.rs:320)
[0m     [0m[1m[38;5;12mmov    [0m edi, 0
[0m     [0m[1m[38;5;12mmov    [0m edx, 3
[0m     [0m[1m[38;5;12mmov    [0m ecx, 34
[0m     [0m[1m[38;5;12mmov    [0m r8d, -1
[0m     [0m[1m[38;5;12mxor    [0m r9d, r9d
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, mmap@GOTPCREL]
[0m     [0m[1m[38;5;9mif ptr == libc::MAP_FAILED { (src/common/mem.rs:330)
[0m     [0m[1m[38;5;12mcmp    [0m rax, -1
[0m     [0m[1m[38;5;9mif ptr == libc::MAP_FAILED { (src/common/mem.rs:330)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_965
[0m     [0m[1m[38;5;9mSelf { (src/runtime/frame.rs:64)
[0m     [0m[1m[38;5;12mmovabs [0m rcx, -562949953421312
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], rcx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 40], r15
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 48], rbx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 56], 8
[0m     [0m[1m[38;5;12mpxor   [0m xmm0, xmm0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 24]
[0m     [0m[1m[38;5;12mmov    [0m rcx, rax
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rax, +, 40], xmm0
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 80], rbp
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rax, +, 64], xmm0
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 160]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, 96], rax
[0m     [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m     [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 80], xmm0
[0m     [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 128], 0
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m [0m[1m[38;5;9mlet value = fun(&mut f)?;
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m r14
[0m [0m[1m[38;5;9mlet value = fun(&mut f)?;
[0m [0m[1m[38;5;12mcmp    [0m rax, 1
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_941
[0m [0m[1m[38;5;9mframe.rax = value;
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rdx
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_570:
[0m [0m[1m[38;5;9m*misses += 1;
[0m [0m[1m[38;5;12madd    [0m word, ptr, [rax], 1
[0m [0m[1m[38;5;9mlda_by_id(&mut frame, base_r, key_r, fdbk);
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mmov    [0m edx, ebp
[0m [0m[1m[38;5;12mmov    [0m ecx, r13d
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::interpreter::run::lda_by_id
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_571:
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 32]
[0m     [0m[1m[38;5;9munsafe { self.u.as_int64 == Self::VALUE_EMPTY as _ } (src/runtime/value.rs:139)
[0m     [0m[1m[38;5;12mtest   [0m rcx, rcx
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9mif self.value_c.is_empty() { (src/runtime/cell.rs:378)
[0m     [0m[1m[38;5;12mcmovne [0m rax, rcx
[0m [0m[1m[38;5;9mframe.rax = slot.value();
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_572:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsi, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rdi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_455
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_575
[0m     [0m[1m[38;5;12mmov    [0m edi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdi, rbx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_455
[0m[0m[1m[38;5;10m.LBB187_575:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_455
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_983
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_456
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_522
[0m[0m[1m[38;5;10m.LBB187_578:
[0m     [0m[1m[38;5;9mlet result = unsafe { self.u.as_int64 & Self::NOT_CELL_MASK as i64 }; (src/runtime/value.rs:174)
[0m     [0m[1m[38;5;12mmovabs [0m rsi, -562949953421312
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsi, +, 2]
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mtest   [0m rbx, rdi
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_458
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_581
[0m     [0m[1m[38;5;12mmov    [0m edi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdi, rbx
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_458
[0m[0m[1m[38;5;10m.LBB187_581:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_458
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_988
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_459
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_538
[0m[0m[1m[38;5;10m.LBB187_584:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rdx
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_976
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 32]
[0m     [0m[1m[38;5;12mmov    [0m ecx, 10
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_589
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rdx, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_977
[0m     [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rdi]
[0m     [0m[1m[38;5;12madd    [0m rax, 4
[0m     [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rax]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mcmp    [0m eax, dword, ptr, [rdx, +, 16]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_589
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdx]
[0m     [0m[1m[38;5;9munsafe { *self.slots.as_ref().unwrap().get_unchecked(offset as usize) } (src/runtime/cell.rs:89)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rcx, +, 8*rax]
[0m[0m[1m[38;5;10m.LBB187_589:
[0m [0m[1m[38;5;9mframe.rax = base.as_cell().direct(*offset);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_590:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rdx
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_966
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 32]
[0m     [0m[1m[38;5;12mmov    [0m ecx, 10
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_595
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rdx, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_958
[0m     [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rdi]
[0m     [0m[1m[38;5;12madd    [0m rax, 4
[0m     [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rax]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mcmp    [0m eax, dword, ptr, [rdx, +, 16]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_595
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdx]
[0m     [0m[1m[38;5;9munsafe { *self.slots.as_ref().unwrap().get_unchecked(offset as usize) } (src/runtime/cell.rs:89)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rcx, +, 8*rax]
[0m[0m[1m[38;5;10m.LBB187_595:
[0m [0m[1m[38;5;9mframe.rax = base.as_cell().direct(*offset);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rcx
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_596:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mmov    [0m rcx, rdx
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_996
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:326)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rdx, +, 32]
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:326)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_4
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rcx, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_995
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rdi]
[0m [0m[1m[38;5;12madd    [0m rax, 4
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rax]
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [r12]
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:850)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rcx]
[0m     [0m[1m[38;5;9m*self (src/runtime/cell.rs:330)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, 8*rax], rdx
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_600:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_673
[0m     [0m[1m[38;5;12mmov    [0m esi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rsi, rdi
[0m     [0m[1m[38;5;12mmov    [0m sil, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_673
[0m[0m[1m[38;5;10m.LBB187_602:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_676
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_603
[0m[0m[1m[38;5;10m.LBB187_687:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_691
[0m     [0m[1m[38;5;12mmov    [0m edi, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdi, rdx
[0m     [0m[1m[38;5;12mmov    [0m dil, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_691
[0m[0m[1m[38;5;10m.LBB187_689:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_694
[0m[0m[1m[38;5;10m.LBB187_690:
[0m     [0m[1m[38;5;12mxor    [0m eax, eax
[0m[0m[1m[38;5;10m.LBB187_707:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, dil
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m edx, sil
[0m [0m[1m[38;5;12mor     [0m edx, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], al
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], dx
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_968
[0m[0m[1m[38;5;10m.LBB187_705:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_708
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rcx
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_707
[0m[0m[1m[38;5;10m.LBB187_708:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rcx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_707
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1007
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_707
[0m[0m[1m[38;5;10m.LBB187_605:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m r14, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_711
[0m     [0m[1m[38;5;12mmov    [0m ecx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rcx, r14
[0m     [0m[1m[38;5;12mmov    [0m cl, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_711
[0m[0m[1m[38;5;10m.LBB187_607:
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_714
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_608
[0m[0m[1m[38;5;10m.LBB187_725:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_729
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rbx
[0m     [0m[1m[38;5;12mmov    [0m dl, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_729
[0m[0m[1m[38;5;10m.LBB187_727:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_732
[0m[0m[1m[38;5;10m.LBB187_728:
[0m     [0m[1m[38;5;12mxor    [0m esi, esi
[0m[0m[1m[38;5;10m.LBB187_744:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m eax, dl
[0m [0m[1m[38;5;12mshl    [0m eax, 8
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mor     [0m ecx, eax
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], sil
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], cx
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9munsafe { &mut *self.raw } (src/common/ptr.rs:84)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12, +, 16]
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1015
[0m[0m[1m[38;5;10m.LBB187_609:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_748
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rbx
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_748
[0m[0m[1m[38;5;10m.LBB187_611:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_751
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_612
[0m[0m[1m[38;5;10m.LBB187_762:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_766
[0m     [0m[1m[38;5;12mmov    [0m edx, 1029
[0m     [0m[1m[38;5;12mbt     [0m rdx, rbp
[0m     [0m[1m[38;5;12mmov    [0m dl, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_766
[0m[0m[1m[38;5;10m.LBB187_764:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_769
[0m[0m[1m[38;5;10m.LBB187_765:
[0m     [0m[1m[38;5;12mxor    [0m esi, esi
[0m[0m[1m[38;5;10m.LBB187_781:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, dl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], sil
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_981
[0m[0m[1m[38;5;10m.LBB187_613:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_785
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rbx
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_785
[0m[0m[1m[38;5;10m.LBB187_615:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_788
[0m[0m[1m[38;5;10m.LBB187_616:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_800:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], 0
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_950
[0m[0m[1m[38;5;10m.LBB187_617:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_804
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rbx
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_804
[0m[0m[1m[38;5;10m.LBB187_619:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_807
[0m[0m[1m[38;5;10m.LBB187_620:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_819:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], 0
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1017
[0m[0m[1m[38;5;10m.LBB187_621:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m r14, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_823
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, r14
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_823
[0m[0m[1m[38;5;10m.LBB187_623:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_826
[0m[0m[1m[38;5;10m.LBB187_624:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_838:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], 0
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_952
[0m[0m[1m[38;5;10m.LBB187_625:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_842
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rbp
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_842
[0m[0m[1m[38;5;10m.LBB187_627:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_845
[0m[0m[1m[38;5;10m.LBB187_628:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_857:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], 0
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_962
[0m[0m[1m[38;5;10m.LBB187_629:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_861
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rbp
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_861
[0m[0m[1m[38;5;10m.LBB187_631:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_864
[0m[0m[1m[38;5;10m.LBB187_632:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_876:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], 0
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_899
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1019
[0m[0m[1m[38;5;10m.LBB187_633:
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_883
[0m     [0m[1m[38;5;12mmov    [0m eax, 1029
[0m     [0m[1m[38;5;12mbt     [0m rax, rbx
[0m     [0m[1m[38;5;12mmov    [0m al, 11
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_883
[0m[0m[1m[38;5;10m.LBB187_635:
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_886
[0m[0m[1m[38;5;10m.LBB187_636:
[0m     [0m[1m[38;5;12mxor    [0m ecx, ecx
[0m[0m[1m[38;5;10m.LBB187_898:
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmovzx  [0m ecx, cl
[0m [0m[1m[38;5;12mshl    [0m ecx, 8
[0m [0m[1m[38;5;12mmovzx  [0m eax, al
[0m [0m[1m[38;5;12mor     [0m eax, ecx
[0m [0m[1m[38;5;9mFeedBack::TypeInfo(smallvec::SmallVec::from_buf([
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 3
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 32], 0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 33], ax
[0m [0m[1m[38;5;12mmov    [0m byte, ptr, [rsp, +, 35], 0
[0m [0m[1m[38;5;12mmov    [0m eax, dword, ptr, [rsp, +, 160]
[0m [0m[1m[38;5;12mlea    [0m rcx, [rsp, +, 24]
[0m [0m[1m[38;5;12mmov    [0m dword, ptr, [rcx, +, 28], eax
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 144]
[0m [0m[1m[38;5;12mmovdqu [0m xmmword, ptr, [rcx, +, 12], xmm0
[0m [0m[1m[38;5;12mmov    [0m word, ptr, [rsp, +, 16], 3
[0m     [0m[1m[38;5;9mCellValue::Function(f) => f, (src/runtime/cell.rs:310)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r15, +, 8]
[0m     [0m[1m[38;5;9munsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) } (liballoc/vec.rs:1973)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 24]
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, r13
[0m     [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_1010
[0m[0m[1m[38;5;10m.LBB187_899:
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8]
[0m [0m[1m[38;5;12mlea    [0m rcx, [4*r13]
[0m [0m[1m[38;5;12madd    [0m rcx, r13
[0m [0m[1m[38;5;12mlea    [0m rbp, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12mmovzx  [0m edx, word, ptr, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12mtest   [0m rdx, rdx
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_3
[0m [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_3
[0m [0m[1m[38;5;12mcmp    [0m rdx, 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_907
[0m [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rax, +, 8*rcx, +, 8]
[0m [0m[1m[38;5;12mlock   [0m sub, qword, ptr, [rdx, +, 24], 1
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_3
[0m [0m[1m[38;5;12mlea    [0m rax, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12madd    [0m rax, 8
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [rax]
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rbx, +, 8]
[0m [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rbx]
[0m [0m[1m[38;5;12mtest   [0m rdi, rdi
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1
[0m [0m[1m[38;5;12mshl    [0m rsi, 4
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1
[0m [0m[1m[38;5;12mmov    [0m edx, 8
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1
[0m[0m[1m[38;5;10m.LBB187_907:
[0m [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rax, +, 8*rcx, +, 8]
[0m [0m[1m[38;5;12mcmp    [0m rsi, 3
[0m [0m[1m[38;5;12mjbe    [0m[1m[38;5;10m .LBB187_3
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rax, +, 8*rcx, +, 24]
[0m [0m[1m[38;5;12mmov    [0m edx, 1
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_2
[0m[0m[1m[38;5;10m.LBB187_637:
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rdx, +, 32]
[0m     [0m[1m[38;5;12mmov    [0m eax, 10
[0m     [0m[1m[38;5;9m(self as *mut u8) == null_mut() (libcore/ptr/mut_ptr.rs:30)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 8
[0m     [0m[1m[38;5;9mif self.slots.is_null() { (src/runtime/cell.rs:83)
[0m     [0m[1m[38;5;12mjb     [0m[1m[38;5;10m .LBB187_398
[0m     [0m[1m[38;5;9mSome(val) => val, (libcore/option.rs:387)
[0m     [0m[1m[38;5;12mand    [0m rdx, -8
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_978
[0m     [0m[1m[38;5;12mlea    [0m rcx, [rcx, +, 8*rdi]
[0m     [0m[1m[38;5;12madd    [0m rcx, 4
[0m     [0m[1m[38;5;12mmov    [0m ecx, dword, ptr, [rcx]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mcmp    [0m ecx, dword, ptr, [rdx, +, 16]
[0m     [0m[1m[38;5;9mif offset >= self.slots.as_ref().unwrap().len() as u32 { (src/runtime/cell.rs:86)
[0m     [0m[1m[38;5;12mjae    [0m[1m[38;5;10m .LBB187_398
[0m     [0m[1m[38;5;9mlet ptr = self.buf.ptr(); (liballoc/vec.rs:814)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rdx]
[0m     [0m[1m[38;5;9munsafe { *self.slots.as_ref().unwrap().get_unchecked(offset as usize) } (src/runtime/cell.rs:89)
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rax, +, 8*rcx]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [r12], rax
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_4
[0m[0m[1m[38;5;10m.LBB187_641:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rcx]
[0m     [0m[1m[38;5;12mmov    [0m dil, 5
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_534
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_984
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 3
[0m     [0m[1m[38;5;12msete   [0m dil
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m dil, dil
[0m     [0m[1m[38;5;12madd    [0m dil, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_535
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_644
[0m[0m[1m[38;5;10m.LBB187_657:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rcx]
[0m     [0m[1m[38;5;12mmov    [0m dil, 5
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_550
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rcx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_989
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 3
[0m     [0m[1m[38;5;12msete   [0m dil
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m dil, dil
[0m     [0m[1m[38;5;12madd    [0m dil, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, r8
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_551
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_660
[0m[0m[1m[38;5;10m.LBB187_673:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rdi]
[0m     [0m[1m[38;5;12mmov    [0m sil, 5
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_602
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rdi, 8
[0m     [0m[1m[38;5;12mcmp    [0m rdi, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_999
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 3
[0m     [0m[1m[38;5;12msete   [0m sil
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m sil, sil
[0m     [0m[1m[38;5;12madd    [0m sil, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_603
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_676
[0m[0m[1m[38;5;10m.LBB187_691:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rbp, qword, ptr, [rdx]
[0m     [0m[1m[38;5;12mmov    [0m dil, 5
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_689
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rdx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_967
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 3
[0m     [0m[1m[38;5;12msete   [0m dil
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m dil, dil
[0m     [0m[1m[38;5;12madd    [0m dil, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, rax
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_690
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_694
[0m[0m[1m[38;5;10m.LBB187_711:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [r14]
[0m     [0m[1m[38;5;12mmov    [0m cl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_607
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m r14, 8
[0m     [0m[1m[38;5;12mcmp    [0m r14, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_987
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m cl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m cl, cl
[0m     [0m[1m[38;5;12madd    [0m cl, 6
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 8]
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_608
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_714
[0m[0m[1m[38;5;10m.LBB187_729:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m dl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_727
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_949
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 3
[0m     [0m[1m[38;5;12msete   [0m dl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m dl, dl
[0m     [0m[1m[38;5;12madd    [0m dl, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rax, rdi
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_728
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_732
[0m[0m[1m[38;5;10m.LBB187_748:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rdx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_611
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_969
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rdx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbp, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_612
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_751
[0m[0m[1m[38;5;10m.LBB187_766:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rbp]
[0m     [0m[1m[38;5;12mmov    [0m dl, 5
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_764
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbp, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1008
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, 3
[0m     [0m[1m[38;5;12msete   [0m dl
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m dl, dl
[0m     [0m[1m[38;5;12madd    [0m dl, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, r14
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_765
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_769
[0m[0m[1m[38;5;10m.LBB187_785:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_615
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_959
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_616
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_788
[0m[0m[1m[38;5;10m.LBB187_804:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_619
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1016
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_620
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_807
[0m[0m[1m[38;5;10m.LBB187_823:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r14]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_623
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m r14, 8
[0m     [0m[1m[38;5;12mcmp    [0m r14, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_960
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_624
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_826
[0m[0m[1m[38;5;10m.LBB187_842:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbp]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_627
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbp, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_961
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_628
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_845
[0m[0m[1m[38;5;10m.LBB187_861:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbp]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_631
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbp, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbp, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1018
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rbx, rdx
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_632
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_864
[0m[0m[1m[38;5;10m.LBB187_883:
[0m     [0m[1m[38;5;9mCellValue::String(_) => true, (src/runtime/cell.rs:227)
[0m     [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rbx]
[0m     [0m[1m[38;5;12mmov    [0m al, 5
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 2
[0m     [0m[1m[38;5;9mif self.as_cell().is_string() { (src/runtime/value.rs:382)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_635
[0m     [0m[1m[38;5;9mresult == 0 && !self.is_empty() && !self.is_null_or_undefined() (src/runtime/value.rs:175)
[0m     [0m[1m[38;5;12mor     [0m rbx, 8
[0m     [0m[1m[38;5;12mcmp    [0m rbx, 10
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1009
[0m     [0m[1m[38;5;9mCellValue::Function(_) => true, (src/runtime/cell.rs:233)
[0m     [0m[1m[38;5;12mcmp    [0m rcx, 3
[0m     [0m[1m[38;5;12msete   [0m al
[0m     [0m[1m[38;5;9m} else if self.as_cell().is_function() { (src/runtime/value.rs:386)
[0m     [0m[1m[38;5;12madd    [0m al, al
[0m     [0m[1m[38;5;12madd    [0m al, 6
[0m     [0m[1m[38;5;9munsafe { (self.u.as_int64 & Self::NUMBER_TAG as i64) == Self::NUMBER_TAG as i64 } (src/runtime/value.rs:187)
[0m     [0m[1m[38;5;12mcmp    [0m rsi, rbp
[0m     [0m[1m[38;5;9mif self.is_int32() { (src/runtime/value.rs:365)
[0m     [0m[1m[38;5;12mja     [0m[1m[38;5;10m .LBB187_636
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_886
[0m[0m[1m[38;5;10m.LBB187_915:
[0m     [0m[1m[38;5;9m*mem_addr (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1204)
[0m     [0m[1m[38;5;12mmovdqa [0m xmm0, xmmword, ptr, [rax]
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpmovmskb[0m edx, xmm0
[0m     [0m[1m[38;5;12mbsf    [0m dx, dx
[0m     [0m[1m[38;5;12mmovzx  [0m edx, dx
[0m     [0m[1m[38;5;12mmov    [0m bl, byte, ptr, [rax, +, rdx]
[0m     [0m[1m[38;5;12mand    [0m bl, 1
[0m     [0m[1m[38;5;12mmov    [0m r13, qword, ptr, [rsp, +, 368]
[0m     [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_125
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_130
[0m[0m[1m[38;5;10m.LBB187_916:
[0m     [0m[1m[38;5;9m*mem_addr (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1204)
[0m     [0m[1m[38;5;12mmovdqa [0m xmm0, xmmword, ptr, [rax]
[0m     [0m[1m[38;5;9mpmovmskb(a.as_i8x16()) (libcore/../stdarch/crates/core_arch/src/x86/sse2.rs:1401)
[0m     [0m[1m[38;5;12mpmovmskb[0m edx, xmm0
[0m     [0m[1m[38;5;12mbsf    [0m dx, dx
[0m     [0m[1m[38;5;12mmovzx  [0m edx, dx
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_130
[0m[0m[1m[38;5;10m.LBB187_917:
[0m [0m[1m[38;5;9mReturn => return Ok(frame.rax),
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [r12]
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 192]
[0m [0m[1m[38;5;9mReturn => return Ok(frame.rax),
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, 8], rax
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx], 0
[0m[0m[1m[38;5;10m.LBB187_918:
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mmov    [0m rdi, r12
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 192]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_922
[0m[0m[1m[38;5;10m.LBB187_919:
[0m [0m[1m[38;5;9mlet err = frame.rax;
[0m [0m[1m[38;5;12mmov    [0m rbx, qword, ptr, [r12]
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mlocal_data().frames.push(frame);
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;9mlocal_data().frames.push(frame);
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [r12, +, 112]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 128], rcx
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [r12, +, 96]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 112], xmm0
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [r12, +, 80]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 96], xmm0
[0m [0m[1m[38;5;12mmovups [0m xmm0, xmmword, ptr, [r12, +, 64]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 80], xmm0
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [r12]
[0m [0m[1m[38;5;12mmovdqu [0m xmm1, xmmword, ptr, [r12, +, 16]
[0m [0m[1m[38;5;12mmovups [0m xmm2, xmmword, ptr, [r12, +, 32]
[0m [0m[1m[38;5;12mmovups [0m xmm3, xmmword, ptr, [r12, +, 48]
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 64], xmm3
[0m [0m[1m[38;5;12mmovaps [0m xmmword, ptr, [rsp, +, 48], xmm2
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 32], xmm1
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m [0m[1m[38;5;12mxor    [0m r14d, r14d
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mlocal_data().frames.push(frame);
[0m [0m[1m[38;5;12mmov    [0m rdi, rax
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m alloc::vec::Vec<T>::push
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 192]
[0m [0m[1m[38;5;9mreturn Err(err);
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rax, +, 8], rbx
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rax], 1
[0m[0m[1m[38;5;10m.LBB187_922:
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12madd    [0m rsp, 408
[0m [0m[1m[38;5;12mpop    [0m rbx
[0m [0m[1m[38;5;12mpop    [0m r12
[0m [0m[1m[38;5;12mpop    [0m r13
[0m [0m[1m[38;5;12mpop    [0m r14
[0m [0m[1m[38;5;12mpop    [0m r15
[0m [0m[1m[38;5;12mpop    [0m rbp
[0m [0m[1m[38;5;12mret[0m
[0m[0m[1m[38;5;10m.LBB187_923:
[0m [0m[1m[38;5;9mreturn Err(local_data().allocate_string(
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rbp, [rsp, +, 144]
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 200]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mmov    [0m rdi, rbp
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value9to_string17hd631185dab7314e7E@GOTPCREL]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 264], rbp
[0m [0m[1m[38;5;12mlea    [0m rax, [rip, +, _ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h517b077bfbda8f02E]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 272], rax
[0m     [0m[1m[38;5;9mArguments { pieces, fmt: None, args } (libcore/fmt/mod.rs:328)
[0m     [0m[1m[38;5;12mlea    [0m rax, [rip, +, .L__unnamed_91]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 2
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 264]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 48], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 56], 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 232]
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN5alloc3fmt6format17hf6896c61c4aa13beE@GOTPCREL]
[0m     [0m[1m[38;5;9mpub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) { (libcore/ptr/mod.rs:180)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 144]
[0m     [0m[1m[38;5;9mif let Some((ptr, layout)) = self.current_memory() { (liballoc/raw_vec.rs:594)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rdi
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_929
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 152]
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_929
[0m     [0m[1m[38;5;9m__rust_dealloc(ptr, layout.size(), layout.align()) (liballoc/alloc.rs:102)
[0m     [0m[1m[38;5;12mmov    [0m edx, 1
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_929:
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 232]
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 248]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], rax
[0m [0m[1m[38;5;9mreturn Err(local_data().allocate_string(
[0m [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m [0m[1m[38;5;12mmov    [0m rdx, r12
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::runtime::process::LocalData::allocate_string
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_937
[0m[0m[1m[38;5;10m.LBB187_930:
[0m [0m[1m[38;5;9mreturn Err(local_data().allocate_string(
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime7process10local_data17h1a97fc2e6905fb89E@GOTPCREL]
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rbp, [rsp, +, 144]
[0m [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 200]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mmov    [0m rdi, rbp
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN6jlight7runtime5value5Value9to_string17hd631185dab7314e7E@GOTPCREL]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 264], rbp
[0m [0m[1m[38;5;12mlea    [0m rax, [rip, +, _ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h517b077bfbda8f02E]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 272], rax
[0m     [0m[1m[38;5;9mArguments { pieces, fmt: None, args } (libcore/fmt/mod.rs:328)
[0m     [0m[1m[38;5;12mlea    [0m rax, [rip, +, .L__unnamed_91]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 16], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 24], 2
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], 0
[0m     [0m[1m[38;5;12mlea    [0m rax, [rsp, +, 264]
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 48], rax
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 56], 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 232]
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN5alloc3fmt6format17hf6896c61c4aa13beE@GOTPCREL]
[0m     [0m[1m[38;5;9mpub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) { (libcore/ptr/mod.rs:180)
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 144]
[0m     [0m[1m[38;5;9mif let Some((ptr, layout)) = self.current_memory() { (liballoc/raw_vec.rs:594)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rdi
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_936
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 152]
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_936
[0m     [0m[1m[38;5;9m__rust_dealloc(ptr, layout.size(), layout.align()) (liballoc/alloc.rs:102)
[0m     [0m[1m[38;5;12mmov    [0m edx, 1
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m[0m[1m[38;5;10m.LBB187_936:
[0m     [0m[1m[38;5;12mlea    [0m rsi, [rsp, +, 16]
[0m [0m[1m[38;5;9mformat!("{} is not a function", value.to_string()),
[0m [0m[1m[38;5;12mmovdqu [0m xmm0, xmmword, ptr, [rsp, +, 232]
[0m [0m[1m[38;5;12mmovdqa [0m xmmword, ptr, [rsp, +, 16], xmm0
[0m [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 248]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rsp, +, 32], rax
[0m [0m[1m[38;5;9mreturn Err(local_data().allocate_string(
[0m [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m [0m[1m[38;5;12mmov    [0m rdx, r12
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m jlight::runtime::process::LocalData::allocate_string
[0m[0m[1m[38;5;10m.LBB187_937:
[0m [0m[1m[38;5;12mmov    [0m rcx, qword, ptr, [rsp, +, 192]
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx, +, 8], rax
[0m [0m[1m[38;5;12mmov    [0m qword, ptr, [rcx], 1
[0m     [0m[1m[38;5;9mpub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) { (libcore/ptr/mod.rs:180)
[0m     [0m[1m[38;5;12mmov    [0m rsi, qword, ptr, [rsp, +, 216]
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;9mif mem::size_of::<T>() == 0 || self.cap == 0 { (liballoc/raw_vec.rs:200)
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_918
[0m     [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 208]
[0m     [0m[1m[38;5;9mif let Some((ptr, layout)) = self.current_memory() { (liballoc/raw_vec.rs:594)
[0m     [0m[1m[38;5;12mtest   [0m rdi, rdi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_918
[0m     [0m[1m[38;5;12mshl    [0m rsi, 3
[0m     [0m[1m[38;5;12mtest   [0m rsi, rsi
[0m     [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_918
[0m     [0m[1m[38;5;9m__rust_dealloc(ptr, layout.size(), layout.align()) (liballoc/alloc.rs:102)
[0m     [0m[1m[38;5;12mmov    [0m edx, 8
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, __rust_dealloc@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_918
[0m[0m[1m[38;5;10m.LBB187_941:
[0m     [0m[1m[38;5;12mmov    [0m rax, qword, ptr, [rsp, +, 192]
[0m     [0m[1m[38;5;9mErr(v) (libcore/result.rs:1558)
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rax, +, 8], rdx
[0m     [0m[1m[38;5;12mmov    [0m qword, ptr, [rax], 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_918
[0m[0m[1m[38;5;10m.LBB187_942:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mLdaChainIdx { .. } => unimplemented!(),
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_92]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_93]
[0m [0m[1m[38;5;12mmov    [0m esi, 15
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_943:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_94]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mmov    [0m rsi, rcx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_944:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_95]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_945:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_946:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mStaGlobalDirect(_) => unimplemented!(),
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_92]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_97]
[0m [0m[1m[38;5;12mmov    [0m esi, 15
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_947:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mLdaGlobalDirect(_) => unimplemented!(),
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_92]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_98]
[0m [0m[1m[38;5;12mmov    [0m esi, 15
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m[0m[1m[38;5;10m.LBB187_948:
[0m [0m[1m[38;5;12mud2[0m
[0m[0m[1m[38;5;10m.LBB187_951:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_950:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_101]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_949:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_952:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_102]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_953:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_954:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_955:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_956:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_103]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mmov    [0m rsi, rcx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_957:
[0m     [0m[1m[38;5;9mErr(AllocError { layout, .. }) => handle_alloc_error(layout), (liballoc/raw_vec.rs:345)
[0m     [0m[1m[38;5;12mmov    [0m esi, 4
[0m     [0m[1m[38;5;12mmov    [0m rdi, r14
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN5alloc5alloc18handle_alloc_error17h2ec1e7edc0ea879eE@GOTPCREL]
[0m     [0m[1m[38;5;12mud2[0m
[0m[0m[1m[38;5;10m.LBB187_958:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_95]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_962:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_104]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_959:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_960:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_961:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_963:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_105]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rcx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_964:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_95]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_965:
[0m     [0m[1m[38;5;9mpanic!("committing memory with mmap() failed"); (src/common/mem.rs:331)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_46]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_47]
[0m     [0m[1m[38;5;12mmov    [0m esi, 36
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_966:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_968:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_106]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_967:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_969:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_970:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9mErr(CapacityOverflow) => capacity_overflow(), (liballoc/raw_vec.rs:344)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN5alloc7raw_vec17capacity_overflow17hd937678e9b14b783E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_971:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_972:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mpanic!("Arguments is not an array");
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_107]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_108]
[0m [0m[1m[38;5;12mmov    [0m esi, 25
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_973:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mpanic!("Arguments is not an array");
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_107]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_109]
[0m [0m[1m[38;5;12mmov    [0m esi, 25
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_974:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_975:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_979:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_110]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_980:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_982:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_976:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_977:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_95]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_981:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_111]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_978:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_95]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_985:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_986:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_983:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_984:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_987:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_990:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_988:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_989:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_991:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9mframe.rax = Value::new_int(lhs.as_int32() % rhs.as_int32());
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, str.3]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_112]
[0m [0m[1m[38;5;12mmov    [0m esi, 48
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_992:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_993:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_113]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_994:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_114]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_995:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m$crate::panicking::panic($msg) (libcore/macros/mod.rs:10)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_15]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_113]
[0m     [0m[1m[38;5;12mmov    [0m esi, 43
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking5panic17h02171c407fa1462fE@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_996:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_997:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_115]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rcx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_998:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1000:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_999:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1001:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_116]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mmov    [0m rsi, rcx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1002:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1003:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1004:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1005:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1006:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9munreachable!();
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_117]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_118]
[0m [0m[1m[38;5;12mmov    [0m esi, 40
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1007:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1010:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_119]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1008:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1009:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1011:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_120]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1012:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9munreachable!();
[0m [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_117]
[0m [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_121]
[0m [0m[1m[38;5;12mmov    [0m esi, 40
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1013:
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_122]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rcx
[0m     [0m[1m[38;5;12mmov    [0m rsi, rax
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1014:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9m&(*slice)[self] (libcore/slice/mod.rs:2871)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_96]
[0m     [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1015:
[0m     [0m[1m[38;5;9m&mut (*slice)[self] (libcore/slice/mod.rs:2877)
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_123]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1017:
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_124]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1019:
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_125]
[0m     [0m[1m[38;5;12mmov    [0m rdi, r13
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m qword, ptr, [rip, +, _ZN4core9panicking18panic_bounds_check17ha0668dcff6357ef4E@GOTPCREL]
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1016:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;9massert!(self.is_cell()); (src/runtime/value.rs:200)
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1018:
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rip, +, .L__unnamed_99]
[0m     [0m[1m[38;5;12mlea    [0m rdx, [rip, +, .L__unnamed_100]
[0m     [0m[1m[38;5;12mmov    [0m esi, 32
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m std::panicking::begin_panic
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_948
[0m[0m[1m[38;5;10m.LBB187_1020:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1021:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1022:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1023:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1024:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1025:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1026:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1027:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1028:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1035
[0m[0m[1m[38;5;10m.LBB187_1029:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1030:
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1032
[0m[0m[1m[38;5;10m.LBB187_1031:
[0m[0m[1m[38;5;10m.LBB187_1032:
[0m     [0m[1m[38;5;12mmov    [0m rbx, rax
[0m     [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1054
[0m[0m[1m[38;5;10m.LBB187_1033:
[0m     [0m[1m[38;5;12mmov    [0m rbx, rax
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1054
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1034:
[0m[0m[1m[38;5;10m.LBB187_1035:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m     [0m[1m[38;5;9m} (src/runtime/frame.rs:83)
[0m     [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m     [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1054
[0m[0m[1m[38;5;10m.LBB187_1036:
[0m     [0m[1m[38;5;12mmov    [0m rbx, rax
[0m     [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1054
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1037:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1054
[0m[0m[1m[38;5;10m.LBB187_1038:
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1040
[0m[0m[1m[38;5;10m.LBB187_1039:
[0m[0m[1m[38;5;10m.LBB187_1040:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 144]
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 208]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1052
[0m[0m[1m[38;5;10m.LBB187_1041:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 208]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1052
[0m[0m[1m[38;5;10m.LBB187_1042:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 232]
[0m [0m[1m[38;5;9mformat!("{}{}", lhs.to_string(), rhs.to_string()),
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1044
[0m[0m[1m[38;5;10m.LBB187_1043:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m[0m[1m[38;5;10m.LBB187_1044:
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 208]
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1054
[0m[0m[1m[38;5;10m.LBB187_1045:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 208]
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1052
[0m[0m[1m[38;5;10m.LBB187_1046:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;9m}
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1054
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1047:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1054
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1048:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1054
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1049:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mjne    [0m[1m[38;5;10m .LBB187_1054
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1051:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mlea    [0m rdi, [rsp, +, 16]
[0m[0m[1m[38;5;10m.LBB187_1052:
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m [0m[1m[38;5;12mjmp    [0m[1m[38;5;10m .LBB187_1054
[0m[0m[1m[38;5;10m.LBB187_1053:
[0m [0m[1m[38;5;12mmov    [0m rbx, rax
[0m [0m[1m[38;5;12mmov    [0m r14b, 1
[0m [0m[1m[38;5;12mtest   [0m r14b, r14b
[0m [0m[1m[38;5;12mje     [0m[1m[38;5;10m .LBB187_1055
[0m[0m[1m[38;5;10m.LBB187_1054:
[0m [0m[1m[38;5;12mmov    [0m rdi, qword, ptr, [rsp, +, 184]
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m core::ptr::drop_in_place
[0m[0m[1m[38;5;10m.LBB187_1055:
[0m [0m[1m[38;5;12mmov    [0m rdi, rbx
[0m [0m[1m[38;5;12mcall   [0m[1m[38;5;9m _Unwind_Resume
[0m [0m[1m[38;5;12mud2[0m
