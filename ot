2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 168 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 336 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 504 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 672 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 840 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1008 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1176 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 64 bytes,total: 1240 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 40 bytes,total: 1280 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1448 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1616 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1784 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 64 bytes,total: 1848 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2016 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2184 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2352 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2520 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2688 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2856 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 3024 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 688 bytes,total: 3712 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 688 bytes,total: 4400 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 4568 bytes
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::strength_reduction] Code before removing empty blocks:
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode] %0: 
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0000] mov loc256,arg0
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0001] jmp [%1]
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode] %1: 
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0000] load_this loc257
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0001] load_global loc258,id1
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0002] mov arg0,loc256
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0003] call loc259,loc258,loc257,arg0-arg0
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0004] safepoint
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0005] return loc259
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::strength_reduction] After: 
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode] %0: 
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0000] mov loc256,arg0
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0001] jmp [%1]
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode] %1: 
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0000] load_this loc257
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0001] load_global loc258,id1
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0002] mov arg0,loc256
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0003] call loc259,loc258,loc257,arg0-arg0
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0004] safepoint
2020-05-14 12:30:35,977 TRACE [waffle2::bytecode]   [0005] return loc259
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] ---start building live set---
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] ---local liveness analysis---
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] ---block 0---
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 0, pred: [], succ: [1], uses: [], defs: [VirtualRegister(-257)] }
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] ---block 1---
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 1, pred: [0], succ: [], uses: [VirtualRegister(-257)], defs: [VirtualRegister(-258), VirtualRegister(-259), VirtualRegister(-260)] }
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] ---global liveness analysis---
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] 2 blocks
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 0---
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 1---
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 2---
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] finished in 3 iterations
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] ---finish building live set---
2020-05-14 12:30:35,977 INFO  [waffle2::bytecompiler::interference_graph] ---start building interference graph---
2020-05-14 12:30:35,977 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 12:30:35,977 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,977 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc257
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc258
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc256
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc258
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc256
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc257
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] ---finish building interference graph---
2020-05-14 12:30:35,978 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 4736 bytes
2020-05-14 12:30:35,978 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 4904 bytes
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::strength_reduction] Code before removing empty blocks:
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode] %0: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0000] jmp [%1]
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode] %1: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0000] mov loc256,id0
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0001] mov loc258,id0
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0002] get_by_id loc257,loc258,id1
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0003] mov loc259,id2
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0004] mov arg0,loc259
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0005] call loc260,loc257,loc256,arg0-arg0
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0006] mov loc261,id3
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0007] safepoint
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0008] return loc261
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode] %2: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0000] safepoint
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0001] return loc261
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::strength_reduction] After: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode] %0: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0000] jmp [%1]
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode] %1: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0000] mov loc256,id0
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0001] mov loc258,id0
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0002] get_by_id loc257,loc258,id1
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0003] mov loc259,id2
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0004] mov arg0,loc259
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0005] call loc260,loc257,loc256,arg0-arg0
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0006] mov loc261,id3
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0007] safepoint
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0008] return loc261
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode] %2: 
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0000] safepoint
2020-05-14 12:30:35,978 TRACE [waffle2::bytecode]   [0001] return loc261
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] ---start building live set---
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] ---local liveness analysis---
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] ---block 0---
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 0, pred: [], succ: [1], uses: [], defs: [] }
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] ---block 1---
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 1, pred: [0], succ: [], uses: [], defs: [VirtualRegister(-257), VirtualRegister(-259), VirtualRegister(-258), VirtualRegister(-260), VirtualRegister(-261), VirtualRegister(-262)] }
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] ---global liveness analysis---
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] 2 blocks
2020-05-14 12:30:35,978 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 0---
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] finished in 1 iterations
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] ---finish building live set---
2020-05-14 12:30:35,978 INFO  [waffle2::bytecompiler::interference_graph] ---start building interference graph---
2020-05-14 12:30:35,979 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 12:30:35,979 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc257
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc259
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc256
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc259
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc256
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc257
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc256
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc258
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 12:30:35,979 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 12:30:35,979 INFO  [waffle2::bytecompiler::interference_graph] ---finish building interference graph---
2020-05-14 12:30:35,979 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 5072 bytes
2020-05-14 12:30:35,979 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 5240 bytes
2020-05-14 12:30:35: 0
2020-05-14 12:30:35: 1
2020-05-14 12:30:35: 2
2020-05-14 12:30:35: 3
2020-05-14 12:30:35: 4
2020-05-14 12:30:35: 5
2020-05-14 12:30:35: 6
2020-05-14 12:30:35: 7
2020-05-14 12:30:35: 8
2020-05-14 12:30:35: 9
2020-05-14 12:30:35: 10
2020-05-14 12:30:35: 11
2020-05-14 12:30:35: 12
2020-05-14 12:30:35: 13
2020-05-14 12:30:35: 14
2020-05-14 12:30:35: 15
2020-05-14 12:30:35: 16
2020-05-14 12:30:35: 17
2020-05-14 12:30:35: 18
2020-05-14 12:30:35: 19
2020-05-14 12:30:35,979 TRACE [waffle2::runtime] Disassembly for '<anonymous>'
  0x7f7441076030: pushq		%rbp
  0x7f7441076031: movq		%rsp, %rbp
  0x7f7441076034: subq		$0, %rsp
  0x7f744107603b: movq		%rdi, %r15
  0x7f744107603e: movq		%rsi, %r14
  0x7f7441076041: jmpq		*%rdx
		  // mov loc2,arg0
  0x7f7441076043: movq		0x18(%r14), %rax
  0x7f7441076047: movq		(%rax), %rax
  0x7f744107604a: movq		(%r14), %r10
  0x7f744107604d: movq		%rax, 0x10(%r10)
		  // jmp [%1]
  0x7f7441076051: jmp		0x7f7441076056
		  // load_this loc1
  0x7f7441076056: movq		0x30(%r14), %rax
  0x7f744107605a: movq		(%r14), %r10
  0x7f744107605d: movq		%rax, 8(%r10)
		  // load_global loc0,id1
  0x7f7441076061: movq		%r15, %rdi
  0x7f7441076064: movabsq		$0x55f96f14ba40, %rsi
  0x7f744107606e: movq		-0x4d(%rip), %rax
  0x7f7441076075: callq		*%rax
  0x7f7441076077: cmpq		$1, %rax
  0x7f744107607b: jne		0x7f74410760bc
  0x7f7441076081: movq		%r14, %rdi
  0x7f7441076084: movabsq		$0x55f96d62d510, %r10
  0x7f744107608e: callq		*%r10
  0x7f7441076091: cmpq		$0, %rax
  0x7f7441076095: je		0x7f74410760a7
  0x7f744107609b: movq		%rdx, %rax
  0x7f744107609e: movq		0x18(%r14), %r10
  0x7f74410760a2: movq		%rax, (%r10)
  0x7f74410760a5: jmpq		*%rax
  0x7f74410760a7: movq		-0x8e(%rip), %rax
  0x7f74410760ae: callq		*%rax
  0x7f74410760b0: movq		$1, %rax
  0x7f74410760b7: jmp		0x7f744107615f
  0x7f74410760bc: movq		%rdx, %rax
  0x7f74410760bf: movq		(%r14), %r10
  0x7f74410760c2: movq		%rax, (%r10)
		  // mov arg0,loc2
  0x7f74410760c5: movq		(%r14), %rax
  0x7f74410760c8: movq		0x10(%rax), %rax
  0x7f74410760cc: movq		0x18(%r14), %r10
  0x7f74410760d0: movq		%rax, (%r10)
		  // call loc0,loc0,loc1,arg0-arg0
  0x7f74410760d3: movq		(%r14), %rax
  0x7f74410760d6: movq		(%rax), %rdi
  0x7f74410760d9: movq		(%r14), %rax
  0x7f74410760dc: movq		8(%rax), %rsi
  0x7f74410760e0: movq		%r15, %rdx
  0x7f74410760e3: movq		%r14, %rcx
  0x7f74410760e6: xorl		%r8d, %r8d
  0x7f74410760e9: xorl		%r9d, %r9d
  0x7f74410760ec: movq		-0xdb(%rip), %rax
  0x7f74410760f3: callq		*%rax
  0x7f74410760f5: cmpq		$1, %rax
  0x7f74410760f9: jne		0x7f744107613a
  0x7f74410760ff: movq		%r14, %rdi
  0x7f7441076102: movabsq		$0x55f96d62d510, %r10
  0x7f744107610c: callq		*%r10
  0x7f744107610f: cmpq		$0, %rax
  0x7f7441076113: je		0x7f7441076125
  0x7f7441076119: movq		%rdx, %rax
  0x7f744107611c: movq		0x18(%r14), %r10
  0x7f7441076120: movq		%rax, (%r10)
  0x7f7441076123: jmpq		*%rax
  0x7f7441076125: movq		-0x11c(%rip), %rax
  0x7f744107612c: callq		*%rax
  0x7f744107612e: movq		$1, %rax
  0x7f7441076135: jmp		0x7f744107615f
  0x7f744107613a: movq		%rdx, %rax
  0x7f744107613d: movq		(%r14), %r10
  0x7f7441076140: movq		%rax, (%r10)
		  // safepoint
  0x7f7441076143: movq		%r15, %rdi
  0x7f7441076146: movq		-0x145(%rip), %rax
  0x7f744107614d: callq		*%rax
		  // return loc0
  0x7f744107614f: movq		(%r14), %rax
  0x7f7441076152: movq		(%rax), %rax
  0x7f7441076155: movq		%rax, %rdx
  0x7f7441076158: xorl		%eax, %eax
  0x7f744107615a: jmp		0x7f744107615f
  0x7f744107615f: movq		%rbp, %rsp
  0x7f7441076162: popq		%rbp
  0x7f7441076163: retq		

start at 0x7f7441076043
2020-05-14 12:30:35: 20
2020-05-14 13:01:41,726 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 168 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 336 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 504 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 672 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 840 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1008 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1176 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 64 bytes,total: 1240 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 40 bytes,total: 1280 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1448 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1616 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 1784 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 64 bytes,total: 1848 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2016 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2184 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2352 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2520 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2688 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 2856 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 3024 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 688 bytes,total: 3712 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 688 bytes,total: 4400 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 4568 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 688 bytes,total: 5256 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 5424 bytes
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::strength_reduction] Code before removing empty blocks:
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode] %0: 
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0000] mov loc256,arg0
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0001] jmp [%1]
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode] %1: 
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0000] load_this loc257
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0001] load_global loc258,id1
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0002] load_up loc260,0
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0003] add loc259,loc260,loc256
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0004] mov arg0,loc259
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0005] call loc261,loc258,loc257,arg0-arg0
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0006] safepoint
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0007] return loc261
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::strength_reduction] After: 
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode] %0: 
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0000] mov loc256,arg0
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0001] jmp [%1]
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode] %1: 
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0000] load_this loc257
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0001] load_global loc258,id1
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0002] load_up loc260,0
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0003] add loc259,loc260,loc256
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0004] mov arg0,loc259
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0005] call loc261,loc258,loc257,arg0-arg0
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0006] safepoint
2020-05-14 13:01:41,727 TRACE [waffle2::bytecode]   [0007] return loc261
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] ---start building live set---
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] ---local liveness analysis---
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] ---block 0---
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 0, pred: [], succ: [1], uses: [], defs: [VirtualRegister(-257)] }
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] ---block 1---
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 1, pred: [0], succ: [], uses: [VirtualRegister(-257)], defs: [VirtualRegister(-258), VirtualRegister(-259), VirtualRegister(-261), VirtualRegister(-260), VirtualRegister(-262)] }
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] ---global liveness analysis---
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] 2 blocks
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 0---
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 1---
2020-05-14 13:01:41,727 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 2---
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] finished in 3 iterations
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] ---finish building live set---
2020-05-14 13:01:41,727 INFO  [waffle2::bytecompiler::interference_graph] ---start building interference graph---
2020-05-14 13:01:41,727 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 13:01:41,727 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc258
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc259
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc257
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc259
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc258
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc260
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc257
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc260
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc260
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc257
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc258
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc258
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc257
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] ---finish building interference graph---
2020-05-14 13:01:41,728 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 5592 bytes
2020-05-14 13:01:41,728 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 5760 bytes
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::strength_reduction] Code before removing empty blocks:
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode] %0: 
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0000] mov loc256,arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0001] jmp [%1]
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode] %1: 
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0000] load_this loc257
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0001] load_global loc258,id1
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0002] mov arg0,loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0003] call loc259,loc258,loc257,arg0-arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0004] mov loc260,id2
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0005] mov loc262,id2
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0006] get_by_id loc261,loc262,id3
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0007] mov loc263,id4
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0008] mov arg0,loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0009] close_env loc264, loc263, arg0-arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0010] mov arg0,loc264
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0011] call loc265,loc261,loc260,arg0-arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0012] safepoint
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0013] return loc265
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::strength_reduction] After: 
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode] %0: 
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0000] mov loc256,arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0001] jmp [%1]
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode] %1: 
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0000] load_this loc257
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0001] load_global loc258,id1
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0002] mov arg0,loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0003] call loc259,loc258,loc257,arg0-arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0004] mov loc260,id2
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0005] mov loc262,id2
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0006] get_by_id loc261,loc262,id3
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0007] mov loc263,id4
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0008] mov arg0,loc256
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0009] close_env loc264, loc263, arg0-arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0010] mov arg0,loc264
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0011] call loc265,loc261,loc260,arg0-arg0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0012] safepoint
2020-05-14 13:01:41,728 TRACE [waffle2::bytecode]   [0013] return loc265
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] ---start building live set---
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] ---local liveness analysis---
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] ---block 0---
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 0, pred: [], succ: [1], uses: [], defs: [VirtualRegister(-257)] }
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] ---block 1---
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 1, pred: [0], succ: [], uses: [VirtualRegister(-257), VirtualRegister(-257)], defs: [VirtualRegister(-258), VirtualRegister(-259), VirtualRegister(-260), VirtualRegister(-261), VirtualRegister(-263), VirtualRegister(-262), VirtualRegister(-264), VirtualRegister(-265), VirtualRegister(-266)] }
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] ---global liveness analysis---
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] 2 blocks
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 0---
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 1---
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 2---
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] finished in 3 iterations
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] ---finish building live set---
2020-05-14 13:01:41,728 INFO  [waffle2::bytecompiler::interference_graph] ---start building interference graph---
2020-05-14 13:01:41,728 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 13:01:41,728 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,728 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc264 and loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc261 and loc264
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc264 and loc260
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc264
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc263 and loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc261 and loc263
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc263 and loc260
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc263
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc263 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc263
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc261 and loc260
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc261 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc262 and loc260
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc262
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc262 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc262
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc260 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc260
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc259
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc257
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc258
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc258
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc256
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc257
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] ---finish building interference graph---
2020-05-14 13:01:41,729 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 5928 bytes
2020-05-14 13:01:41,729 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 6096 bytes
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::strength_reduction] Code before removing empty blocks:
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode] %0: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0000] jmp [%1]
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode] %1: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0000] mov loc256,id0
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0001] mov loc258,id0
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0002] get_by_id loc257,loc258,id1
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0003] mov loc259,id2
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0004] mov arg0,loc259
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0005] call loc260,loc257,loc256,arg0-arg0
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0006] mov loc261,id3
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0007] safepoint
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0008] return loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode] %2: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0000] safepoint
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0001] return loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::strength_reduction] After: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode] %0: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0000] jmp [%1]
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode] %1: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0000] mov loc256,id0
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0001] mov loc258,id0
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0002] get_by_id loc257,loc258,id1
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0003] mov loc259,id2
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0004] mov arg0,loc259
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0005] call loc260,loc257,loc256,arg0-arg0
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0006] mov loc261,id3
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0007] safepoint
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0008] return loc261
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode] %2: 
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0000] safepoint
2020-05-14 13:01:41,729 TRACE [waffle2::bytecode]   [0001] return loc261
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] ---start building live set---
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] ---local liveness analysis---
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] ---block 0---
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 0, pred: [], succ: [1], uses: [], defs: [] }
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] ---block 1---
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] as CFGNode CFGBlockNode { block: 1, pred: [0], succ: [], uses: [], defs: [VirtualRegister(-257), VirtualRegister(-259), VirtualRegister(-258), VirtualRegister(-260), VirtualRegister(-261), VirtualRegister(-262)] }
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] ---global liveness analysis---
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] 2 blocks
2020-05-14 13:01:41,729 TRACE [waffle2::bytecompiler::interference_graph] ---iteration 0---
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] finished in 1 iterations
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] ---finish building live set---
2020-05-14 13:01:41,729 INFO  [waffle2::bytecompiler::interference_graph] ---start building interference graph---
2020-05-14 13:01:41,730 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 13:01:41,730 DEBUG [waffle2::bytecompiler::interference_graph] loop depth = 0
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc257
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc259
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc259 and loc256
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc259
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc257 and loc256
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc257
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc258 and loc256
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] add edge between loc256 and loc258
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] for every defines in the instruction, add edge...
2020-05-14 13:01:41,730 TRACE [waffle2::bytecompiler::interference_graph] (move source None does not interference with defines)
2020-05-14 13:01:41,730 INFO  [waffle2::bytecompiler::interference_graph] ---finish building interference graph---
2020-05-14 13:01:41,730 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 6264 bytes
2020-05-14 13:01:41,730 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 6432 bytes
0x560170162a30
0x560170149780
2020-05-14 13:01:41: 0
2020-05-14 13:01:41,730 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 6600 bytes
0x560170149830
2020-05-14 13:01:41: 0
0x560170149830
2020-05-14 13:01:41: 1
0x560170149830
2020-05-14 13:01:41: 2
0x560170149830
2020-05-14 13:01:41: 3
0x560170149830
2020-05-14 13:01:41: 4
0x560170149830
2020-05-14 13:01:41: 5
0x560170149830
2020-05-14 13:01:41: 6
0x560170149830
2020-05-14 13:01:41: 7
0x560170149830
2020-05-14 13:01:41: 8
0x560170149830
2020-05-14 13:01:41: 9
0x560170149780
2020-05-14 13:01:41: 1
2020-05-14 13:01:41,730 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 6768 bytes
0x560170149830
2020-05-14 13:01:41: 1
0x560170149830
2020-05-14 13:01:41: 2
0x560170149830
2020-05-14 13:01:41: 3
0x560170149830
2020-05-14 13:01:41: 4
0x560170149830
2020-05-14 13:01:41: 5
0x560170149830
2020-05-14 13:01:41: 6
0x560170149830
2020-05-14 13:01:41: 7
0x560170149830
2020-05-14 13:01:41: 8
0x560170149830
2020-05-14 13:01:41: 9
0x560170149830
2020-05-14 13:01:41: 10
0x560170149780
2020-05-14 13:01:41: 2
2020-05-14 13:01:41,730 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 6936 bytes
0x560170149830
2020-05-14 13:01:41,730 TRACE [waffle2::runtime] Disassembly for '<anonymous>'
  0x7f9e25dae040: pushq		%rbp
  0x7f9e25dae041: movq		%rsp, %rbp
  0x7f9e25dae044: subq		$0, %rsp
  0x7f9e25dae04b: movq		%rdi, %r15
  0x7f9e25dae04e: movq		%rsi, %r14
  0x7f9e25dae051: jmpq		*%rdx
		  // mov loc3,arg0
  0x7f9e25dae053: movq		0x18(%r14), %rax
  0x7f9e25dae057: movq		(%rax), %rax
  0x7f9e25dae05a: movq		(%r14), %r10
  0x7f9e25dae05d: movq		%rax, 0x18(%r10)
		  // jmp [%1]
  0x7f9e25dae061: jmp		0x7f9e25dae066
		  // load_this loc2
  0x7f9e25dae066: movq		0x30(%r14), %rax
  0x7f9e25dae06a: movq		(%r14), %r10
  0x7f9e25dae06d: movq		%rax, 0x10(%r10)
		  // load_global loc1,id1
  0x7f9e25dae071: movq		%r15, %rdi
  0x7f9e25dae074: movabsq		$0x560170147d10, %rsi
  0x7f9e25dae07e: movq		-0x4d(%rip), %rax
  0x7f9e25dae085: callq		*%rax
  0x7f9e25dae087: cmpq		$1, %rax
  0x7f9e25dae08b: jne		0x7f9e25dae0cc
  0x7f9e25dae091: movq		%r14, %rdi
  0x7f9e25dae094: movabsq		$0x56016f31e1e0, %r10
  0x7f9e25dae09e: callq		*%r10
  0x7f9e25dae0a1: cmpq		$0, %rax
  0x7f9e25dae0a5: je		0x7f9e25dae0b7
  0x7f9e25dae0ab: movq		%rdx, %rax
  0x7f9e25dae0ae: movq		0x18(%r14), %r10
  0x7f9e25dae0b2: movq		%rax, (%r10)
  0x7f9e25dae0b5: jmpq		*%rax
  0x7f9e25dae0b7: movq		-0x8e(%rip), %rax
  0x7f9e25dae0be: callq		*%rax
  0x7f9e25dae0c0: movq		$1, %rax
  0x7f9e25dae0c7: jmp		0x7f9e25dae1d8
  0x7f9e25dae0cc: movq		%rdx, %rax
  0x7f9e25dae0cf: movq		(%r14), %r10
  0x7f9e25dae0d2: movq		%rax, 8(%r10)
		  // load_up loc0,0
  0x7f9e25dae0d6: movq		%r14, %rdi
  0x7f9e25dae0d9: xorl		%esi, %esi
  0x7f9e25dae0db: movq		-0xba(%rip), %rax
  0x7f9e25dae0e2: callq		*%rax
  0x7f9e25dae0e4: movq		(%r14), %r10
  0x7f9e25dae0e7: movq		%rax, (%r10)
		  // add loc0,loc0,loc3
  0x7f9e25dae0ea: movq		(%r14), %rax
  0x7f9e25dae0ed: movq		(%rax), %rdi
  0x7f9e25dae0f0: movq		0x18(%rax), %rsi
		  // if (!is_int32(lhs) || !is_int32(rhs) goto slow_path;
  0x7f9e25dae0f4: movabsq		$0xfffe000000000000, %rax
  0x7f9e25dae0fe: leaq		-1(%rax), %rax
  0x7f9e25dae102: cmpq		%rdi, %rax
  0x7f9e25dae105: ja		0x7f9e25dae1dd
  0x7f9e25dae10b: cmpq		%rsi, %rax
  0x7f9e25dae10e: ja		0x7f9e25dae1dd
  0x7f9e25dae114: addl		%esi, %edi
  0x7f9e25dae116: movl		%edi, %eax
		  // if (overflow) goto slow_path
  0x7f9e25dae118: seto		%r10b
  0x7f9e25dae11c: testl		%r10d, %r10d
  0x7f9e25dae11f: je		0x7f9e25dae1dd
  0x7f9e25dae125: movq		%rax, %rcx
  0x7f9e25dae128: movabsq		$0xfffe000000000000, %rax
  0x7f9e25dae132: orq		%rax, %rcx
  0x7f9e25dae135: movq		%rcx, %rax
  0x7f9e25dae138: movq		(%r14), %r10
  0x7f9e25dae13b: movq		%rax, (%r10)
		  // mov arg0,loc0
  0x7f9e25dae13e: movq		(%r14), %rax
  0x7f9e25dae141: movq		(%rax), %rax
  0x7f9e25dae144: movq		0x18(%r14), %r10
  0x7f9e25dae148: movq		%rax, (%r10)
		  // call loc0,loc1,loc2,arg0-arg0
  0x7f9e25dae14b: movq		(%r14), %rax
  0x7f9e25dae14e: movq		8(%rax), %rdi
  0x7f9e25dae152: movq		(%r14), %rax
  0x7f9e25dae155: movq		0x10(%rax), %rsi
  0x7f9e25dae159: movq		%r15, %rdx
  0x7f9e25dae15c: movq		%r14, %rcx
  0x7f9e25dae15f: xorl		%r8d, %r8d
  0x7f9e25dae162: xorl		%r9d, %r9d
  0x7f9e25dae165: movq		-0x14c(%rip), %rax
  0x7f9e25dae16c: callq		*%rax
  0x7f9e25dae16e: cmpq		$1, %rax
  0x7f9e25dae172: jne		0x7f9e25dae1b3
  0x7f9e25dae178: movq		%r14, %rdi
  0x7f9e25dae17b: movabsq		$0x56016f31e1e0, %r10
  0x7f9e25dae185: callq		*%r10
  0x7f9e25dae188: cmpq		$0, %rax
  0x7f9e25dae18c: je		0x7f9e25dae19e
  0x7f9e25dae192: movq		%rdx, %rax
  0x7f9e25dae195: movq		0x18(%r14), %r10
  0x7f9e25dae199: movq		%rax, (%r10)
  0x7f9e25dae19c: jmpq		*%rax
  0x7f9e25dae19e: movq		-0x18d(%rip), %rax
  0x7f9e25dae1a5: callq		*%rax
  0x7f9e25dae1a7: movq		$1, %rax
  0x7f9e25dae1ae: jmp		0x7f9e25dae1d8
  0x7f9e25dae1b3: movq		%rdx, %rax
  0x7f9e25dae1b6: movq		(%r14), %r10
  0x7f9e25dae1b9: movq		%rax, (%r10)
		  // safepoint
  0x7f9e25dae1bc: movq		%r15, %rdi
  0x7f9e25dae1bf: movq		-0x1b6(%rip), %rax
  0x7f9e25dae1c6: callq		*%rax
		  // return loc0
  0x7f9e25dae1c8: movq		(%r14), %rax
  0x7f9e25dae1cb: movq		(%rax), %rax
  0x7f9e25dae1ce: movq		%rax, %rdx
  0x7f9e25dae1d1: xorl		%eax, %eax
  0x7f9e25dae1d3: jmp		0x7f9e25dae1d8
  0x7f9e25dae1d8: movq		%rbp, %rsp
  0x7f9e25dae1db: popq		%rbp
  0x7f9e25dae1dc: retq		
		  // (add loc0,loc0,loc3) slow_path:
  0x7f9e25dae1dd: movq		(%r14), %rax
  0x7f9e25dae1e0: movq		(%rax), %rdi
  0x7f9e25dae1e3: movq		0x18(%rax), %rsi
  0x7f9e25dae1e7: movq		-0x1e6(%rip), %rax
  0x7f9e25dae1ee: callq		*%rax
  0x7f9e25dae1f0: movq		(%r14), %r10
  0x7f9e25dae1f3: movq		%rax, (%r10)
  0x7f9e25dae1f6: jmp		0x7f9e25dae13e

0x560170143b50
2020-05-14 13:01:41: 2
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 3
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 4
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 5
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 6
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 7
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149780
2020-05-14 13:01:41: 3
2020-05-14 13:01:41,731 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 7104 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 3
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 4
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 5
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 6
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 7
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149780
2020-05-14 13:01:41: 4
2020-05-14 13:01:41,731 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 7272 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 4
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 5
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 6
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 7
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149780
2020-05-14 13:01:41: 5
2020-05-14 13:01:41,731 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 7440 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 5
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 6
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 7
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149780
2020-05-14 13:01:41: 6
2020-05-14 13:01:41,732 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 7608 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 6
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 7
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149780
2020-05-14 13:01:41: 7
2020-05-14 13:01:41,732 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 7776 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 7
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149780
2020-05-14 13:01:41: 8
2020-05-14 13:01:41,732 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 7944 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 8
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149780
2020-05-14 13:01:41: 9
2020-05-14 13:01:41,732 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 8112 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 9
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149780
2020-05-14 13:01:41: 10
2020-05-14 13:01:41,732 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 8280 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 10
2020-05-14 13:01:41,732 TRACE [waffle2::heap::heap] Collecting, threshold is 8192 bytes and 8280 bytes allocated
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170157260
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170157260
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701469b0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701469b0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x56017015f030
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x56017015f030
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170146d40
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170146d40
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170162d60
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170162d60
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701599c0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701599c0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170148ee0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170148ee0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170162e40
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170162e40
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170148f80
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170148f80
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701472a0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701472a0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170146ba0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170146ba0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701656c0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170165680
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170165680
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701656a0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701656a0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170164ba0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170164ba0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170164bc0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170164bc0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170162d80
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170162d80
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170162da0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170162da0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170147de0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170147de0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701473b0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701473b0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701473d0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701473d0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170146c10
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170146c10
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170146990
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701447d0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x5601701447d0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170144660
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170144660
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170144460
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170144460
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143e30
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170143e30
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143c20
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170143c20
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143a50
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Unroot 0x560170143a50
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701438c0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143770
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701436d0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143580
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143430
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x5601701430c0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170143070
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170142850
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170142750
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170142530
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170142060
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170141db0
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170142080
2020-05-14 13:01:41,732 WARN  [waffle2::heap::heap] Root 0x560170141c70
2020-05-14 13:01:41,732 WARN  [waffle2::interpreter::callstack] AAAAA
2020-05-14 13:01:41,732 WARN  [waffle2::interpreter::callstack] Trace callframe
2020-05-14 13:01:41,732 WARN  [waffle2::interpreter::callstack] Trace callframe
2020-05-14 13:01:41,732 WARN  [waffle2::interpreter::callstack] Trace callframe
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
2020-05-14 13:01:41,732 WARN  [waffle2::runtime::cell] Finalize cell
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149780
2020-05-14 13:01:41: 11
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 8448 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 11
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149780
2020-05-14 13:01:41: 12
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 8616 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 12
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149780
2020-05-14 13:01:41: 13
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 8784 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 13
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149780
2020-05-14 13:01:41: 14
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 8952 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 14
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 23
0x560170149780
2020-05-14 13:01:41: 15
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 9120 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 15
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 23
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 24
0x560170149780
2020-05-14 13:01:41: 16
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 9288 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 16
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 23
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 24
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 25
0x560170149780
2020-05-14 13:01:41: 17
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 9456 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 17
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 23
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 24
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 25
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 26
0x560170149780
2020-05-14 13:01:41: 18
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 9624 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 18
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 23
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 24
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 25
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 26
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 27
0x560170149780
2020-05-14 13:01:41: 19
2020-05-14 13:01:41,733 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 9792 bytes
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 19
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 20
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 21
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 22
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 23
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 24
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 25
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 26
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 27
0x560170149830
0x560170143b50
2020-05-14 13:01:41: 28
0x560170149780
2020-05-14 13:01:41,734 TRACE [waffle2::runtime] Disassembly for '<anonymous>'
  0x7f9e25d7d050: pushq		%rbp
  0x7f9e25d7d051: movq		%rsp, %rbp
  0x7f9e25d7d054: subq		$0, %rsp
  0x7f9e25d7d05b: movq		%rdi, %r15
  0x7f9e25d7d05e: movq		%rsi, %r14
  0x7f9e25d7d061: jmpq		*%rdx
		  // mov loc3,arg0
  0x7f9e25d7d063: movq		0x18(%r14), %rax
  0x7f9e25d7d067: movq		(%rax), %rax
  0x7f9e25d7d06a: movq		(%r14), %r10
  0x7f9e25d7d06d: movq		%rax, 0x18(%r10)
		  // jmp [%1]
  0x7f9e25d7d071: jmp		0x7f9e25d7d076
		  // load_this loc1
  0x7f9e25d7d076: movq		0x30(%r14), %rax
  0x7f9e25d7d07a: movq		(%r14), %r10
  0x7f9e25d7d07d: movq		%rax, 8(%r10)
		  // load_global loc0,id1
  0x7f9e25d7d081: movq		%r15, %rdi
  0x7f9e25d7d084: movabsq		$0x560170147300, %rsi
  0x7f9e25d7d08e: movq		-0x4d(%rip), %rax
  0x7f9e25d7d095: callq		*%rax
  0x7f9e25d7d097: cmpq		$1, %rax
  0x7f9e25d7d09b: jne		0x7f9e25d7d0dc
  0x7f9e25d7d0a1: movq		%r14, %rdi
  0x7f9e25d7d0a4: movabsq		$0x56016f31e1e0, %r10
  0x7f9e25d7d0ae: callq		*%r10
  0x7f9e25d7d0b1: cmpq		$0, %rax
  0x7f9e25d7d0b5: je		0x7f9e25d7d0c7
  0x7f9e25d7d0bb: movq		%rdx, %rax
  0x7f9e25d7d0be: movq		0x18(%r14), %r10
  0x7f9e25d7d0c2: movq		%rax, (%r10)
  0x7f9e25d7d0c5: jmpq		*%rax
  0x7f9e25d7d0c7: movq		-0x8e(%rip), %rax
  0x7f9e25d7d0ce: callq		*%rax
  0x7f9e25d7d0d0: movq		$1, %rax
  0x7f9e25d7d0d7: jmp		0x7f9e25d7d2c9
  0x7f9e25d7d0dc: movq		%rdx, %rax
  0x7f9e25d7d0df: movq		(%r14), %r10
  0x7f9e25d7d0e2: movq		%rax, (%r10)
		  // mov arg0,loc3
  0x7f9e25d7d0e5: movq		(%r14), %rax
  0x7f9e25d7d0e8: movq		0x18(%rax), %rax
  0x7f9e25d7d0ec: movq		0x18(%r14), %r10
  0x7f9e25d7d0f0: movq		%rax, (%r10)
		  // call loc0,loc0,loc1,arg0-arg0
  0x7f9e25d7d0f3: movq		(%r14), %rax
  0x7f9e25d7d0f6: movq		(%rax), %rdi
  0x7f9e25d7d0f9: movq		(%r14), %rax
  0x7f9e25d7d0fc: movq		8(%rax), %rsi
  0x7f9e25d7d100: movq		%r15, %rdx
  0x7f9e25d7d103: movq		%r14, %rcx
  0x7f9e25d7d106: xorl		%r8d, %r8d
  0x7f9e25d7d109: xorl		%r9d, %r9d
  0x7f9e25d7d10c: movq		-0xdb(%rip), %rax
  0x7f9e25d7d113: callq		*%rax
  0x7f9e25d7d115: cmpq		$1, %rax
  0x7f9e25d7d119: jne		0x7f9e25d7d15a
  0x7f9e25d7d11f: movq		%r14, %rdi
  0x7f9e25d7d122: movabsq		$0x56016f31e1e0, %r10
  0x7f9e25d7d12c: callq		*%r10
  0x7f9e25d7d12f: cmpq		$0, %rax
  0x7f9e25d7d133: je		0x7f9e25d7d145
  0x7f9e25d7d139: movq		%rdx, %rax
  0x7f9e25d7d13c: movq		0x18(%r14), %r10
  0x7f9e25d7d140: movq		%rax, (%r10)
  0x7f9e25d7d143: jmpq		*%rax
  0x7f9e25d7d145: movq		-0x11c(%rip), %rax
  0x7f9e25d7d14c: callq		*%rax
  0x7f9e25d7d14e: movq		$1, %rax
  0x7f9e25d7d155: jmp		0x7f9e25d7d2c9
  0x7f9e25d7d15a: movq		%rdx, %rax
  0x7f9e25d7d15d: movq		(%r14), %r10
  0x7f9e25d7d160: movq		%rax, (%r10)
		  // mov loc2,id2
  0x7f9e25d7d163: movabsq		$0xfffe00000000000a, %rax
  0x7f9e25d7d16d: movq		(%r14), %r10
  0x7f9e25d7d170: movq		%rax, 0x10(%r10)
		  // mov loc0,id2
  0x7f9e25d7d174: movabsq		$0xfffe00000000000a, %rax
  0x7f9e25d7d17e: movq		(%r14), %r10
  0x7f9e25d7d181: movq		%rax, (%r10)
		  // get_by_id loc1,loc0,id3
  0x7f9e25d7d184: movq		%r15, %rdi
  0x7f9e25d7d187: movq		(%r14), %rax
  0x7f9e25d7d18a: movq		(%rax), %rax
  0x7f9e25d7d18d: movq		%rax, %rsi
  0x7f9e25d7d190: movabsq		$0x560170144590, %rax
  0x7f9e25d7d19a: movq		%rax, %rdx
  0x7f9e25d7d19d: movq		-0x17c(%rip), %rax
  0x7f9e25d7d1a4: callq		*%rax
  0x7f9e25d7d1a6: cmpq		$1, %rax
  0x7f9e25d7d1aa: jne		0x7f9e25d7d1eb
  0x7f9e25d7d1b0: movq		%r14, %rdi
  0x7f9e25d7d1b3: movabsq		$0x56016f31e1e0, %r10
  0x7f9e25d7d1bd: callq		*%r10
  0x7f9e25d7d1c0: cmpq		$0, %rax
  0x7f9e25d7d1c4: je		0x7f9e25d7d1d6
  0x7f9e25d7d1ca: movq		%rdx, %rax
  0x7f9e25d7d1cd: movq		0x18(%r14), %r10
  0x7f9e25d7d1d1: movq		%rax, (%r10)
  0x7f9e25d7d1d4: jmpq		*%rax
  0x7f9e25d7d1d6: movq		-0x1bd(%rip), %rax
  0x7f9e25d7d1dd: callq		*%rax
  0x7f9e25d7d1df: movq		$1, %rax
  0x7f9e25d7d1e6: jmp		0x7f9e25d7d2c9
  0x7f9e25d7d1eb: movq		(%r14), %r10
  0x7f9e25d7d1ee: movq		%rax, 8(%r10)
		  // mov loc0,id4
  0x7f9e25d7d1f2: movabsq		$0x560170149830, %rax
  0x7f9e25d7d1fc: movq		(%r14), %r10
  0x7f9e25d7d1ff: movq		%rax, (%r10)
		  // mov arg0,loc3
  0x7f9e25d7d202: movq		(%r14), %rax
  0x7f9e25d7d205: movq		0x18(%rax), %rax
  0x7f9e25d7d209: movq		0x18(%r14), %r10
  0x7f9e25d7d20d: movq		%rax, (%r10)
		  // close_env loc0, loc0, arg0-arg0
  0x7f9e25d7d210: movq		%r14, %rdi
  0x7f9e25d7d213: movq		(%r14), %rax
  0x7f9e25d7d216: movq		(%rax), %rsi
  0x7f9e25d7d219: xorl		%edx, %edx
  0x7f9e25d7d21b: xorl		%ecx, %ecx
  0x7f9e25d7d21d: movq		%r15, %r8
  0x7f9e25d7d220: movq		-0x20f(%rip), %rax
  0x7f9e25d7d227: callq		*%rax
  0x7f9e25d7d229: movq		(%r14), %r10
  0x7f9e25d7d22c: movq		%rax, (%r10)
		  // mov arg0,loc0
  0x7f9e25d7d22f: movq		(%r14), %rax
  0x7f9e25d7d232: movq		(%rax), %rax
  0x7f9e25d7d235: movq		0x18(%r14), %r10
  0x7f9e25d7d239: movq		%rax, (%r10)
		  // call loc0,loc1,loc2,arg0-arg0
  0x7f9e25d7d23c: movq		(%r14), %rax
  0x7f9e25d7d23f: movq		8(%rax), %rdi
  0x7f9e25d7d243: movq		(%r14), %rax
  0x7f9e25d7d246: movq		0x10(%rax), %rsi
  0x7f9e25d7d24a: movq		%r15, %rdx
  0x7f9e25d7d24d: movq		%r14, %rcx
  0x7f9e25d7d250: xorl		%r8d, %r8d
  0x7f9e25d7d253: xorl		%r9d, %r9d
  0x7f9e25d7d256: movq		-0x24d(%rip), %rax
  0x7f9e25d7d25d: callq		*%rax
  0x7f9e25d7d25f: cmpq		$1, %rax
  0x7f9e25d7d263: jne		0x7f9e25d7d2a4
  0x7f9e25d7d269: movq		%r14, %rdi
  0x7f9e25d7d26c: movabsq		$0x56016f31e1e0, %r10
  0x7f9e25d7d276: callq		*%r10
  0x7f9e25d7d279: cmpq		$0, %rax
  0x7f9e25d7d27d: je		0x7f9e25d7d28f
  0x7f9e25d7d283: movq		%rdx, %rax
  0x7f9e25d7d286: movq		0x18(%r14), %r10
  0x7f9e25d7d28a: movq		%rax, (%r10)
  0x7f9e25d7d28d: jmpq		*%rax
  0x7f9e25d7d28f: movq		-0x28e(%rip), %rax
  0x7f9e25d7d296: callq		*%rax
  0x7f9e25d7d298: movq		$1, %rax
  0x7f9e25d7d29f: jmp		0x7f9e25d7d2c9
  0x7f9e25d7d2a4: movq		%rdx, %rax
  0x7f9e25d7d2a7: movq		(%r14), %r10
  0x7f9e25d7d2aa: movq		%rax, (%r10)
		  // safepoint
  0x7f9e25d7d2ad: movq		%r15, %rdi
  0x7f9e25d7d2b0: movq		-0x2b7(%rip), %rax
  0x7f9e25d7d2b7: callq		*%rax
		  // return loc0
  0x7f9e25d7d2b9: movq		(%r14), %rax
  0x7f9e25d7d2bc: movq		(%rax), %rax
  0x7f9e25d7d2bf: movq		%rax, %rdx
  0x7f9e25d7d2c2: xorl		%eax, %eax
  0x7f9e25d7d2c4: jmp		0x7f9e25d7d2c9
  0x7f9e25d7d2c9: movq		%rbp, %rsp
  0x7f9e25d7d2cc: popq		%rbp
  0x7f9e25d7d2cd: retq		

0x560170143b50
2020-05-14 13:01:41: 20
2020-05-14 13:01:41,734 TRACE [waffle2::heap::heap] Allocate 168 bytes,total: 9960 bytes
