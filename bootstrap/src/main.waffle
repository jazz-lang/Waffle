import "std"


func read_file(filename *char) *char {
	var buffer = null as *char

	var string_size = 0
	var read_size = 0
	var handler = fopen(filename,c"r")
	if handler != null as *FILE {
		fseek(handler,0,SEEK_END)
		string_size = ftell(handler)
		rewind(handler)

		buffer = malloc(sizeof(char) as int * (string_size + 1)) as *char
		read_size = fread(buffer,sizeof(char) as int,string_size,handler)
		buffer[string_size] = '\0'
		if string_size != read_size {
			free(buffer as *void)
			buffer = null as *char
		}
		fclose(handler)
	}

	return buffer
}


func main() int {
	printf(c"%x",hash_cstr(c"Дарова ебана 228"))

	return 0
}
/*
func main(argc int,argv **char) int {
	if argv[1] == null as *char {
		println("expected filename as argument")
		exit(-1)
	}
	var buffer = read_file(argv[1])

	var r = reader_from_str(buffer)
	var l = lexer_new(&r)
	var tok = l.read_token()
	var token_strings = TOKEN_STRINGS
	while tok.kind != TOK_END {
		if tok.value != null as *char {
			if strlen(tok.value) != 0 {
				printf(c"%s: %s\n",token_strings[tok.kind],tok.value)
			} else {
				printf(c"%s\n",token_strings[tok.kind])
			}
		} else {
			printf(c"%i\n",tok.kind)
		}
		
		tok = l.read_token()
	}
	
	return 0
}*/