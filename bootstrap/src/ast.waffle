struct Location {
	line int,
	column int,
	file *char
}


func new_location(name *char,line int,column int) Location {
	var loc Location 
	loc.line = line
	loc.column = column
	loc.file = name

	return loc
}

func (l *Location) to_string() *char {
	var size = 20 + 20
	if l.file != null as *char {
		size = size + strlen(l.file)
	}
	var buf = calloc(1,size) as *char
	var file *char
	if l.file != null as *char {
		file = l.file
	} else {
		file = c"<no-file>"
	}
	var line = l.line
	var col = l.column
	sprintf(buf,c"%s:%i:%i",file,line,col)
	return buf
}


const INT_EXPR: int = 0
const FLOAT_EXPR: int = 1
const STR_EXPR: int = 2
const BIN_EXPR: int = 3
const CSTR_EXPR: int = 4
struct Expr {
	pos Location,
	id int,
	kind int
}


struct ExprInt {
	pos Location,
	id int,
	kind int,
	val ulong
}

struct ExrpFloat {
	pos Location,
	id int,
	kind int,
	val float64
}

struct ExprBinary {
	pos Location,
	id int,
	kind int,
	op *char,
	x *Expr,
	y *Expr
}